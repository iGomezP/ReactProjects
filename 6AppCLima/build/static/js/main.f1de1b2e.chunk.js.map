{"version":3,"sources":["components/Header.jsx","components/Error.jsx","components/Formulario.jsx","components/Clima.jsx","Helpers.js","App.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","setBusqueda","setConsultar","useState","error","setError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","defaultValue","Clima","resultado","main","weather","iconoClima","claseIconoClima","urlClima","IconosClima","icon","Math","round","temp","src","alt","description","temp_max","temp_min","App","componente","consultar","setResultado","useEffect","a","nombreCiudad","encodeURI","url","fetch","respuesta","json","cod","consultarAPI","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1de1b2e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Header = ( { titulo } ) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper light-blue darken-2\">\r\n        <a href=\"index.html\" className=\"brand-logo\">{ titulo }</a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  titulo: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import PropTypes from 'prop-types';\r\n\r\nconst Error = ( { mensaje } ) => {\r\n  return (\r\n    <p className=\"red darken-4 error\">{ mensaje }</p>\r\n  );\r\n}\r\n\r\nError.propTypes = {\r\n  mensaje: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;","import { useState } from \"react\";\r\nimport Error from \"./Error\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ( { busqueda, setBusqueda, setConsultar } ) => {\r\n\r\n  const [ error, setError ] = useState( false );\r\n\r\n  // Extraer ciudad y país\r\n  const { ciudad, pais } = busqueda;\r\n\r\n  // función que coloca los elementos en el state\r\n  const handleChange = e => {\r\n    // actualizar el state\r\n    setBusqueda( {\r\n      ...busqueda,\r\n      [ e.target.name ]: e.target.value\r\n    } )\r\n  }\r\n\r\n  // Cuando el usuario da submit al form\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    if ( ciudad.trim() === '' || pais.trim() === '' ) {\r\n      setError( true );\r\n      return;\r\n    }\r\n    setError( false );\r\n\r\n\r\n    // Pasarlo al componente principal (App.js)\r\n    setConsultar( true );\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <form\r\n      onSubmit={ handleSubmit }\r\n    >\r\n\r\n      { error ? <Error mensaje='Ambos campos son obligatorios' /> : null }\r\n\r\n      <div className=\"input-field col s12\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"ciudad\"\r\n          id=\"ciudad\"\r\n          value={ ciudad }\r\n          onChange={ handleChange }\r\n        />\r\n        <label htmlFor=\"ciudad\">Ciudad: </label>\r\n      </div>\r\n\r\n      <div className=\"input-field col s12\">\r\n        <select\r\n          name=\"pais\"\r\n          id=\"pais\"\r\n          value={ pais }\r\n          onChange={ handleChange }\r\n        >\r\n          <option value=\"\" defaultValue>-- Seleccione un País --</option>\r\n          <option value=\"US\">Estados Unidos</option>\r\n          <option value=\"MX\">México</option>\r\n          <option value=\"AR\">Argentina</option>\r\n          <option value=\"CO\">Colombia</option>\r\n          <option value=\"CR\">Costa Rica</option>\r\n          <option value=\"ES\">España</option>\r\n          <option value=\"PE\">Perú</option>\r\n        </select>\r\n        <label htmlFor=\"pais\">País: </label>\r\n\r\n        <div className=\"input-field col s12\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"waves-effect waves-dark btn-large btn-block yellow accent-4 col s12\"\r\n          >Buscar Clima</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nFormulario.propTypes = {\r\n  busqueda: PropTypes.object.isRequired,\r\n  setBusqueda: PropTypes.func.isRequired,\r\n  setConsultar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Formulario;","import PropTypes from 'prop-types';\r\nimport { IconosClima } from '../Helpers';\r\n\r\nconst Clima = ( { resultado } ) => {\r\n\r\n  // Extraer los valores\r\n  const { name, main, weather } = resultado;\r\n\r\n  if ( !name ) {\r\n    return null;\r\n  }\r\n  // Llama a una función que devuelve el id y clase del icono\r\n  const iconoClima = IconosClima( weather[ 0 ].icon );\r\n\r\n  return (\r\n    <div className=\"card-panel col s12\">\r\n      <div className=\"black-text\">\r\n        <h2>El clima de <span className=\"name\">{ name }</span> es: </h2>\r\n\r\n        <p className=\"temperatura\">\r\n          { Math.round( main.temp ) }<span> &#x2103;</span>\r\n\r\n          <br />\r\n\r\n          <img className={ iconoClima.claseIconoClima } src={ iconoClima.urlClima } alt=\"ImagenClima\" />\r\n          &nbsp;\r\n          <span className=\"descripcion\">{ weather[ 0 ].description }</span>\r\n\r\n        </p>\r\n        <p>\r\n          Temp. Máxima:&nbsp;\r\n          { Math.round( main.temp_max ) } <span> &#x2103;</span>\r\n        </p>\r\n        <p>\r\n          Temp. Mínima:&nbsp;\r\n          { Math.round( main.temp_min ) } <span> &#x2103;</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nClima.propTypes = {\r\n  resultado: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Clima;","export function IconosClima( id ) {\r\n  let claseIconoClima;\r\n  switch ( id ) {\r\n    case \"01d\":\r\n      id = \"01d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"01n\":\r\n      id = \"01n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"02d\":\r\n      id = \"02d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"02n\":\r\n      id = \"02n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"03d\":\r\n      id = \"03d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"03n\":\r\n      id = \"03n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"04d\":\r\n      id = \"04d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"04n\":\r\n      id = \"04n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"09d\":\r\n      id = \"09d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"09n\":\r\n      id = \"09n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"10d\":\r\n      id = \"10d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"10n\":\r\n      id = \"10n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"11d\":\r\n      id = \"11d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"11n\":\r\n      id = \"11n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"13d\":\r\n      id = \"13d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"13n\":\r\n      id = \"13n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    case \"50d\":\r\n      id = \"50d\";\r\n      claseIconoClima = 'iconoClimaDia';\r\n      break;\r\n\r\n    case \"50n\":\r\n      id = \"50n\";\r\n      claseIconoClima = 'iconoClimaNoche';\r\n      break;\r\n\r\n    default:\r\n      id = \"01d\";\r\n      claseIconoClima = \"\";\r\n      break;\r\n  }\r\n\r\n  const urlClima = `https://openweathermap.org/img/wn/${ id }.png`;\r\n  return { urlClima: urlClima, claseIconoClima: claseIconoClima };\r\n}","import { Fragment, useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Clima from \"./components/Clima\";\nimport Error from \"./components/Error\";\n\n\nfunction App() {\n\n  // state global\n  const [ busqueda, setBusqueda ] = useState( {\n    ciudad: '',\n    pais: ''\n  } );\n  // State para controlar el useEffect, de esta manera no se ejecuta hasta que sea true (una vez pulsado el botón de submit)\n  const [ consultar, setConsultar ] = useState( false );\n  // State para Guardar el resultado de la consulta API\n  const [ resultado, setResultado ] = useState( {} );\n  // State para mostrar error al no encontrar la ciudad buscada\n  const [ error, setError ] = useState( false );\n\n\n  // Extraer ciudad y país\n  const { ciudad, pais } = busqueda;\n\n  useEffect( () => {\n\n    const consultarAPI = async () => {\n\n      if ( consultar ) {\n        const appId = '24f07138d34f8c129cbb71d5f5190033';\n        // ° Uso de {encodeURI()} para cambiar los espacios en blanco por {%20}\n        const nombreCiudad = encodeURI( ciudad.trim() );\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ nombreCiudad },${ pais }&appid=${ appId }&units=metric&lang=es`;\n\n        const respuesta = await fetch( url );\n        const resultado = await respuesta.json();\n\n        // const clima = resultado.weather;\n        // console.log( clima[ 0 ].description );\n\n        setResultado( resultado );\n        setConsultar( false );\n\n        // Detecta si hubo resultados correctos en la consulta\n\n        if ( resultado.cod === \"404\" ) {\n          setError( true );\n        } else {\n          setError( false );\n        }\n      }\n    }\n\n    consultarAPI();\n    //eslint-disable-next-line\n  }, [ consultar ] );\n\n  // Carga condicional de componentes, si hay error, muestra el error, si no, muestra el resultado\n  let componente;\n  if ( error ) {\n    componente = <Error mensaje=\"No hay resultados\" />\n  } else {\n    componente = <Clima resultado={ resultado } />\n  }\n\n  return (\n    <Fragment>\n      <Header\n        titulo='App de Clima con React'\n      />\n\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n                busqueda={ busqueda }\n                setBusqueda={ setBusqueda }\n                setConsultar={ setConsultar }\n              />\n            </div>\n            <div className=\"col m6 s12\">\n              { componente }\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);"],"sourceRoot":""}