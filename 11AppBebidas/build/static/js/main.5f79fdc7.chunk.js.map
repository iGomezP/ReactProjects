{"version":3,"sources":["components/Header.jsx","context/CategoriasContext.jsx","context/IngredientesContext.jsx","context/RecetasContext.jsx","components/Formulario.jsx","context/ModalContext.jsx","components/Receta.jsx","components/ListaRecetas.jsx","App.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","setCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","IngredientesContext","IngredientesProvider","listaIngredientes","setListaIngredientes","ingredientes","obtenerIngredientes","RecetasContext","RecetasProvider","recetas","setRecetas","ingrediente","categoria","busquedas","setBusquedas","consultar","setConsultar","url","replace","resultado","obtenerRecetas","Formulario","busqueda","setBusqueda","useContext","obtenerDatosReceta","e","target","name","onSubmit","preventDefault","console","log","id","onChange","map","strIngredient1","strCategory","type","ModalContext","ModalProvider","idReceta","setIdReceta","recetaInfo","setReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","overflowY","overflowX","width","maxHeight","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","informacion","i","push","mostrarIngredientes","strInstructions","ListaRecetas","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f79fdc7.chunk.js","sourcesContent":["\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-alert\">\r\n      <h1>Search Drink Recipes</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\nimport { createContext, useState, useEffect } from \"react\";\r\n\r\n// Cuando se utiliza Context API y useContext los datos fluyen a través de este\r\n\r\n// Crear el context (referencia)\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider, es de dónde van a salir los datos y las funciones\r\nconst CategoriasProvider = ( props ) => {\r\n\r\n  // Crear el state del context\r\n  const [ categorias, setCategorias ] = useState( [] );\r\n\r\n\r\n  // Ejecutar el llamado a la API\r\n  useEffect( () => {\r\n    const obtenerCategorias = async () => {\r\n      const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\r\n      const categorias = await axios.get( url );\r\n\r\n      setCategorias( categorias.data.drinks );\r\n\r\n    }\r\n    obtenerCategorias();\r\n  }, [] );\r\n\r\n\r\n\r\n  // ¿ Todo lo que esté dentro del return será lo que se va a devolver\r\n  return (\r\n    <CategoriasContext.Provider\r\n      // Dentro de value se pasa todos los componentes que queremos que estén disponibles\r\n      value={ {\r\n        categorias\r\n      } }\r\n    >\r\n      { props.children }\r\n    </CategoriasContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CategoriasProvider;","import axios from \"axios\";\r\nimport { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const IngredientesContext = createContext();\r\n\r\nconst IngredientesProvider = ( props ) => {\r\n\r\n  // State de los ingredientes\r\n  const [ listaIngredientes, setListaIngredientes ] = useState( [] );\r\n\r\n  // Llamado a la API con los ingredientes\r\n  useEffect( () => {\r\n    const obtenerIngredientes = async () => {\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list`;\r\n\r\n      const ingredientes = await axios.get( url );\r\n\r\n\r\n      // console.log( ingredientes.data.drinks );\r\n      setListaIngredientes( ingredientes.data.drinks );\r\n    }\r\n    obtenerIngredientes();\r\n  }, [] );\r\n\r\n  return (\r\n    <IngredientesContext.Provider\r\n      value={ {\r\n        listaIngredientes\r\n      } }\r\n    >\r\n      { props.children }\r\n    </IngredientesContext.Provider>\r\n  );\r\n}\r\n\r\nexport default IngredientesProvider;","import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = ( props ) => {\r\n\r\n  const [ recetas, setRecetas ] = useState( [] );\r\n\r\n  const [ busquedas, setBusquedas ] = useState( {\r\n    ingrediente: '',\r\n    categoria: ''\r\n  } );\r\n\r\n  const [ consultar, setConsultar ] = useState( false );\r\n\r\n  const { ingrediente, categoria } = busquedas;\r\n\r\n  // let strCategoria = categoria;\r\n\r\n\r\n  // Cuando la busqueda cambie, se ejecuta el useEffect para consultar la API con un resultado\r\n  useEffect( () => {\r\n\r\n    // console.log( strCategoria.replace( \" \", \"_\" ) );\r\n    if ( consultar ) {\r\n      const obtenerRecetas = async () => {\r\n\r\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ ingrediente.replace( /\\s/g, \"%20\" ) }&?c=${ categoria.replace( /\\s/g, \"%20\" ) }`;\r\n\r\n        const resultado = await axios.get( url );\r\n\r\n\r\n        // console.log( url );\r\n        setRecetas( resultado.data.drinks );\r\n      }\r\n      obtenerRecetas();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [ busquedas ] );\r\n\r\n\r\n  return (\r\n    <RecetasContext.Provider\r\n      value={ {\r\n        recetas,\r\n        setBusquedas,\r\n        setConsultar\r\n      } }\r\n    >\r\n      { props.children }\r\n    </RecetasContext.Provider>\r\n  );\r\n}\r\n\r\nexport default RecetasProvider;","// Se importa el context para usarlo con el hook useContext\r\nimport { CategoriasContext } from \"../context/CategoriasContext\";\r\nimport { IngredientesContext } from \"../context/IngredientesContext\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n// Se usa useContext para consumir el componente CategoriasContext\r\nimport { useContext, useState } from \"react\";\r\n\r\nconst Formulario = () => {\r\n\r\n  const [ busqueda, setBusqueda ] = useState( {\r\n    ingrediente: '',\r\n    categoria: ''\r\n  } );\r\n\r\n  const { categorias } = useContext( CategoriasContext );\r\n  const { listaIngredientes } = useContext( IngredientesContext );\r\n  const { setBusquedas, setConsultar } = useContext( RecetasContext );\r\n\r\n  // Función para leer los contenidos\r\n  const obtenerDatosReceta = e => {\r\n    setBusqueda( {\r\n      // Se toma una copia de la búsqueda para no sobre escribir al pasar al siguiente campo\r\n      ...busqueda,\r\n      [ e.target.name ]: e.target.value\r\n    } );\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className=\"col-12\"\r\n      onSubmit={ e => {\r\n        e.preventDefault();\r\n        setBusquedas( busqueda );\r\n        console.log( busqueda );\r\n        setConsultar( true );\r\n      } }\r\n    >\r\n      <fieldset className=\"text-center\">\r\n        <legend>Search drinks by Category or Ingredient </legend>\r\n      </fieldset>\r\n\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4\">\r\n          {/* <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by Ingredient\"\r\n            onChange={ obtenerDatosReceta }\r\n          /> */}\r\n          <select\r\n            name=\"ingrediente\"\r\n            id=\"\"\r\n            className=\"form-control\"\r\n            onChange={ obtenerDatosReceta }\r\n          >\r\n            <option value=\"\">-- Select Ingredient --</option>\r\n            { listaIngredientes.map( ingrediente => (\r\n              <option\r\n                key={ ingrediente.strIngredient1 }\r\n                value={ ingrediente.strIngredient1 }\r\n              >\r\n                { ingrediente.strIngredient1 }\r\n              </option>\r\n            ) ) }\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"col-md-4\">\r\n          <select\r\n            name=\"categoria\"\r\n            id=\"\"\r\n            className=\"form-control\"\r\n            onChange={ obtenerDatosReceta }\r\n          >\r\n            <option value=\"\">-- Select Category --</option>\r\n            { categorias.map( categoria => (\r\n              <option\r\n                key={ categoria.strCategory }\r\n                value={ categoria.strCategory }\r\n              >\r\n                { categoria.strCategory }\r\n              </option>\r\n            ) ) }\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-primary\"\r\n            value=\"Find Drinks\"\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Formulario;","import { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Crear el context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = ( props ) => {\r\n\r\n  // State del provider\r\n  const [ idReceta, setIdReceta ] = useState( null );\r\n  const [ recetaInfo, setReceta ] = useState( {} );\r\n\r\n  // Una vez se tiene el ID de la receta, se llama a la API\r\n\r\n  useEffect( () => {\r\n    const obtenerReceta = async () => {\r\n      if ( !idReceta ) {\r\n        return;\r\n      }\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${ idReceta }`;\r\n\r\n      const resultado = await axios.get( url );\r\n\r\n      setReceta( resultado.data.drinks[ 0 ] );\r\n\r\n    }\r\n\r\n    obtenerReceta();\r\n\r\n  }, [ idReceta ] );\r\n\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={ {\r\n        recetaInfo,\r\n        setIdReceta,\r\n        setReceta\r\n      } }\r\n    >\r\n      { props.children }\r\n    </ModalContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default ModalProvider;","import { useContext, useState } from \"react\";\r\nimport { ModalContext } from \"../context/ModalContext\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${ top }%`,\r\n    left: `${ left }%`,\r\n    transform: `translate(-${ top }%, -${ left }%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles( theme => ( {\r\n  paper: {\r\n    position: 'absolute',\r\n    overflowY: 'scroll',\r\n    overflowX: 'hidden',\r\n    width: 600,\r\n    maxHeight: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[ 5 ],\r\n    padding: theme.spacing( 2, 4, 3 ),\r\n  },\r\n} ) );\r\n\r\nconst Receta = ( { receta } ) => {\r\n\r\n  // ¿ Configuración del modal de material-ui\r\n  const [ modalStyle ] = useState( getModalStyle );\r\n  const [ open, setOpen ] = useState( false );\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen( true );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen( false );\r\n  };\r\n\r\n  // Extraer los valores del context\r\n  const { recetaInfo, setIdReceta, setReceta } = useContext( ModalContext );\r\n  // console.log( recetaInfo );\r\n\r\n  // Muestra y formatea los ingredientes\r\n  const mostrarIngredientes = informacion => {\r\n    let ingredientes = [];\r\n\r\n    for ( let i = 1; i < 16; i++ ) {\r\n      if ( recetaInfo[ `strIngredient${ i }` ] ) {\r\n        ingredientes.push(\r\n          <li>\r\n            { recetaInfo[ `strIngredient${ i }` ] }\r\n            &nbsp;---&gt;&nbsp;\r\n            { recetaInfo[ `strMeasure${ i }` ] }\r\n          </li>\r\n        )\r\n      }\r\n    }\r\n    return ingredientes;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">\r\n          { receta.strDrink }\r\n        </h2>\r\n        <img className=\"card-img-top\" src={ receta.strDrinkThumb } alt={ `Imagen de ${ receta.strDrink }` } />\r\n\r\n        <div className=\"card-body\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={ () => {\r\n              setIdReceta( receta.idDrink )\r\n              handleOpen();\r\n            } }\r\n          >See Recipe</button>\r\n\r\n          <Modal\r\n            open={ open }\r\n            onClose={ () => {\r\n              setIdReceta( null );\r\n              setReceta( {} );\r\n              handleClose();\r\n            } }\r\n          >\r\n            <div\r\n              style={ modalStyle }\r\n              className={ classes.paper }\r\n            >\r\n              <h2>{ recetaInfo.strDrink }</h2>\r\n              <h3 className=\"mt-4\">Ingredients and Measures</h3>\r\n              <ul>\r\n                { mostrarIngredientes( recetaInfo ) }\r\n              </ul>\r\n              <h3 className=\"mt-4\">\r\n                Instructions\r\n              </h3>\r\n              <p>{ recetaInfo.strInstructions }</p>\r\n\r\n              <img className=\"img-fluid my-4\" src={ recetaInfo.strDrinkThumb } alt={ `Imagen de ${ recetaInfo.strDrink }` } />\r\n\r\n\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Receta;","import { useContext } from \"react\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\nimport Receta from \"./Receta\";\r\n\r\nconst ListaRecetas = () => {\r\n\r\n  // Extraer las recetas\r\n  const { recetas } = useContext( RecetasContext );\r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      { recetas.map( receta => (\r\n        <Receta\r\n          key={ receta.idDrink }\r\n          receta={ receta }\r\n        />\r\n      ) ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListaRecetas;","// ¬ Componentes\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListaRecetas from \"./components/ListaRecetas\";\n// ¬ Providers\nimport CategoriasProvider from \"./context/CategoriasContext\";\nimport RecetasProvider from \"./context/RecetasContext\";\nimport ModalProvider from \"./context/ModalContext\";\nimport IngredientesProvider from \"./context/IngredientesContext\";\n\n\nfunction App() {\n\n  return (\n    // ¿ Todo lo que esté dentro del componente del contextAPI estará disponible para el resto de los componentes\n    <CategoriasProvider>\n      <IngredientesProvider>\n        <RecetasProvider>\n          <ModalProvider>\n            <Header />\n\n            <div className=\"container mt-5\">\n              <div className=\"row\">\n                <Formulario />\n              </div>\n\n              <ListaRecetas />\n\n            </div>\n\n          </ModalProvider>\n        </RecetasProvider>\n      </IngredientesProvider>\n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);"],"sourceRoot":""}