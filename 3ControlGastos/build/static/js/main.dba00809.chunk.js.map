{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Listado.jsx","helpers.js","components/ControlPresupuesto.jsx","App.js","index.js"],"names":["Error","mensaje","className","Pregunta","setPresupuesto","setRestante","setMostrarPregunta","useState","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","setGasto","setCrearGasto","nombre","setNombre","trim","gasto","id","nanoid","htmlFor","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","setGastos","crearGasto","useEffect","presupuestoRestante","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dba00809.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Error = ( { mensaje } ) => (\r\n  <p className=\"alert alert-danger error\">\r\n    { mensaje }\r\n  </p>\r\n);\r\n\r\nError.propTypes = {\r\n  mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import { Fragment, useState } from \"react\";\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Pregunta = ( { setPresupuesto, setRestante, setMostrarPregunta } ) => {\r\n\r\n  // Definir el state cantidad en 0\r\n  const [ cantidad, setCantidad ] = useState( 0 );\r\n  const [ error, setError ] = useState( false );\r\n\r\n  // Función que lee el presupuesto\r\n  const definirPresupuesto = e => {\r\n    setCantidad( parseInt( e.target.value, 10 ) );\r\n  }\r\n\r\n  // Submit para definir el presupuesto\r\n  const agregarPresupuesto = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    // Valida si la cantiad es menor a uno o no es un número\r\n    if ( cantidad < 1 || isNaN( cantidad ) ) {\r\n      setError( true );\r\n      return;\r\n    }\r\n\r\n    // Si se pasa la validación\r\n    setError( false );\r\n    setPresupuesto( cantidad );\r\n    setRestante( cantidad );\r\n    setMostrarPregunta( false );\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>Coloca tu presupuesto</h2>\r\n\r\n      { error ?\r\n        <Error\r\n          mensaje=\"El Presupuesto es Incorrecto\"\r\n        />\r\n        :\r\n        null\r\n      }\r\n\r\n      <form\r\n        onSubmit={ agregarPresupuesto }\r\n      >\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Coloca tu presupuesto\"\r\n          onChange={ definirPresupuesto }\r\n        />\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"button-primary u-full-width\"\r\n          value=\"Definir Presupuesto\" />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nPregunta.propTypes = {\r\n  setPresupuesto: PropTypes.func.isRequired,\r\n  setRestante: PropTypes.func.isRequired,\r\n  setMostrarPregunta: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pregunta;","import { useState } from \"react\";\r\nimport Error from \"./Error\";\r\nimport { nanoid } from \"nanoid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ( { setGasto, setCrearGasto } ) => {\r\n\r\n  const [ nombre, setNombre ] = useState( '' );\r\n  const [ cantidad, setCantidad ] = useState( '' );\r\n  const [ error, setError ] = useState( false );\r\n\r\n\r\n  // Cuando el usuario agrega un gasto\r\n  const agregarGasto = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    // Si el gasto es menor a 1 o está vacio o si el nombre está vació, dará error\r\n    if ( cantidad < 1 || isNaN( cantidad ) || nombre.trim() === '' ) {\r\n      setError( true );\r\n      return;\r\n    }\r\n    setError( false );\r\n\r\n    // Construir el gasto\r\n    const gasto = {\r\n      nombre,\r\n      cantidad,\r\n      id: nanoid()\r\n    }\r\n\r\n    // Pasar el gasto al componente principal (App.js)\r\n    setGasto( gasto );\r\n    setCrearGasto( true );\r\n\r\n    // Resetear el form\r\n    setNombre( '' );\r\n    setCantidad( '' );\r\n\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={ agregarGasto }\r\n    >\r\n      <h2>Agrega tus gastos aquí</h2>\r\n\r\n      { error ?\r\n        ( <Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\" /> )\r\n        :\r\n        null }\r\n\r\n      <div className=\"campo\">\r\n        <label htmlFor=\"\">Nombre Gasto</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Ej. Transporte\"\r\n          value={ nombre }\r\n          // Lo que el usuario escriba se guardará en el state nombre\r\n          onChange={ e => setNombre( e.target.value ) }\r\n        />\r\n      </div>\r\n\r\n      <div className=\"campo\">\r\n        <label htmlFor=\"\">Cantidad Gasto</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Ej. 300\"\r\n          value={ cantidad }\r\n          // Lo que el usuario escriba se guardará en el state cantidad\r\n          onChange={ e => setCantidad( parseInt( e.target.value ) ) }\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Agregar Gasto\"\r\n        className=\"button-primary u-full-width\"\r\n      />\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nFormulario.propTypes = {\r\n  setGasto: PropTypes.func.isRequired,\r\n  setCrearGasto: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import PropTypes from 'prop-types';\r\n\r\nconst Gasto = ( { gasto } ) => (\r\n  <li className=\"gastos\">\r\n    <p>\r\n      { gasto.nombre }\r\n      <span className=\"gasto\">$ { gasto.cantidad }</span>\r\n    </p>\r\n  </li>\r\n);\r\n\r\nGasto.propTypes = {\r\n  gasto: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gasto;","import Gasto from \"./Gasto\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ( { gastos } ) => (\r\n  <div className=\"gastos-realizados\">\r\n    <h2>Listado</h2>\r\n    { gastos.map( gasto => (\r\n      <Gasto\r\n        key={ gasto.id }\r\n        gasto={ gasto }\r\n      />\r\n    ) ) }\r\n  </div>\r\n)\r\n\r\nListado.propTypes = {\r\n  gastos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Listado;","export const revisarPresupuesto = ( presupuesto, restante ) => {\r\n  let clase;\r\n\r\n  if ( ( presupuesto / 4 ) > restante ) {\r\n    // Si el presupuesto está del 25% alerta es rojo\r\n    clase = 'alert alert-danger';\r\n  } else if ( ( presupuesto / 2 ) > restante ) {\r\n    // Si el presupuesto está del 50% alerta es amarillo\r\n    clase = 'alert alert-warning';\r\n  } else {\r\n    // Si el presupuesto está del 51%+ alerta es verde\r\n    clase = 'alert alert-success';\r\n  }\r\n\r\n  // usualmente en un helper se añade un return\r\n  return clase;\r\n}","import { Fragment } from \"react\";\r\nimport { revisarPresupuesto } from \"../helpers\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ( { presupuesto, restante } ) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"alert alert-primary\">\r\n        Presupuesto: $ { presupuesto }\r\n      </div>\r\n      <div className={ revisarPresupuesto( presupuesto, restante ) }>\r\n        Restante: $ { restante }\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n  presupuesto: PropTypes.number.isRequired,\r\n  restante: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ControlPresupuesto;","import { useEffect, useState } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  // Definir el state\n  const [ presupuesto, setPresupuesto ] = useState( 0 );\n  const [ restante, setRestante ] = useState( 0 );\n  const [ mostrarPregunta, setMostrarPregunta ] = useState( true );\n  const [ gastos, setGastos ] = useState( [] );\n  const [ gasto, setGasto ] = useState( {} );\n  const [ crearGasto, setCrearGasto ] = useState( false );\n\n\n  // Cuando agreguemos un nuevo gasto\n  // Se toma una copia del arreglo original (...gastos)\n  // Y se agrega el nuevo gasto (gasto)\n  // useEffect que actualiza el restante\n  useEffect( () => {\n    if ( crearGasto ) {\n\n      // Agrega el nuevo presupuesto\n      setGastos( [\n        ...gastos,\n        gasto\n      ] )\n    }\n\n    // Resta del presupuesto actual\n    const presupuestoRestante = restante - gasto.cantidad;\n    setRestante( presupuestoRestante );\n\n    // Una vez ejecutado, resetear a false\n    // ° Importante si no entra en un loop\n    setCrearGasto( false );\n\n    // el comentario de abajo hace que se elimine el warning de dependencias, esto es debido a que no siempre se necesitan usar todas las dependencias especialmente si es un método del state que se actualiza\n    //eslint-disable-next-line\n  }, [ gasto ] );\n\n\n  // const agregarNuevoGasto = gasto => {\n\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <header>\n          <h1><a href=\"index.html\">Gasto Semanal</a></h1>\n\n          <div className=\"contenido-principal contenido\">\n            {/* Carga condicional de un componente */ }\n            { mostrarPregunta ?\n              // Si mostrarPregunta es true, se muestra la parte de definir presupuesto\n              ( <Pregunta\n                setPresupuesto={ setPresupuesto }\n                setRestante={ setRestante }\n                setMostrarPregunta={ setMostrarPregunta }\n              /> )\n              :\n              // Una vez definido el presupuesto, pasa a false y se muestra el listado de gastos\n              (\n                <div className=\"row\">\n                  <div className=\"one-half column\">\n                    <Formulario\n                      setGasto={ setGasto }\n                      setCrearGasto={ setCrearGasto }\n                    />\n                  </div>\n\n                  <div className=\"one-half column\">\n                    <Listado\n                      gastos={ gastos }\n                    />\n                    <ControlPresupuesto\n                      presupuesto={ presupuesto }\n                      restante={ restante }\n                    />\n                  </div>\n                </div>\n              )\n            }\n          </div>\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);"],"sourceRoot":""}