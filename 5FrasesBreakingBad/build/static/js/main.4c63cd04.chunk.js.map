{"version":3,"sources":["components/Frase.jsx","App.js","index.js"],"names":["ContenedorFrase","styled","div","Frase","frase","quote","author","Boton","button","Contenedor","App","useState","setFrase","consultarAPI","a","fetch","api","json","useEffect","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEMA,EAAkBC,IAAOC,IAAV,wpBA6CNC,EAVD,SAAC,GAAiB,IAAdC,EAAa,EAAbA,MAChB,OACE,eAACJ,EAAD,WACE,6BAAMI,EAAMC,QAEZ,mCAAOD,EAAME,cCtCbC,EAAQN,IAAOO,OAAV,4ZAiBLC,EAAaR,IAAOC,IAAV,mHAkDDQ,MA3Cf,WAGE,MAA4BC,mBAAU,IAAtC,mBAAQP,EAAR,KAAeQ,EAAf,KAcMC,EAAY,uCAAG,8BAAAC,EAAA,sEACDC,MAAO,uDADN,cACbC,EADa,gBAECA,EAAIC,OAFL,OAEbb,EAFa,OAInBQ,EAAUR,EAAO,IAJE,2CAAH,qDAYlB,OAJAc,qBAAW,WACTL,MACC,IAGD,eAACJ,EAAD,WACE,cAAC,EAAD,CACEL,MAAQA,IAEV,cAACG,EAAD,CACEY,QAAUN,EADZ,2BCzDNO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAgB,W","file":"static/js/main.4c63cd04.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst ContenedorFrase = styled.div`\r\n  padding: 3rem;\r\n  border-radius: 0.5rem;\r\n  background-color: #FFF;\r\n  max-width: 800px;\r\n\r\n  @media (min-width: 992px) {\r\n      margin-top:20rem;\r\n  }\r\n\r\n  h1{\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    text-align: center;\r\n    position: relative;\r\n    padding-left: 4rem;\r\n\r\n    &::before{\r\n      content: open-quote;\r\n      font-size: 10rem;\r\n      color: black;\r\n      position: absolute;\r\n      left: -1rem;\r\n      top: -2rem;\r\n    }\r\n  }\r\n  p{\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    font-size: 1.4rem;\r\n    font-weight: bold;\r\n    text-align: right;\r\n    color: #666;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nconst Frase = ( { frase } ) => {\r\n  return (\r\n    <ContenedorFrase>\r\n      <h1>{ frase.quote }</h1>\r\n\r\n      <p>- { frase.author }</p>\r\n    </ContenedorFrase>\r\n  );\r\n}\r\n\r\nexport default Frase;","import styled from \"@emotion/styled\";\nimport { useEffect, useState } from \"react\";\nimport Frase from \"./components/Frase\";\n\nconst Boton = styled.button`\n  background: -webkit-linear-gradient(top left, #007d35 0%, #007d35 40%, #0f574e 100%);\n  background-size: 300px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: #FFFFFF;\n  margin-top: 3rem;\n  padding: 1rem 3rem;\n  font-size: 2rem;\n  border: 2px solid black;\n  transition: background-size .8s ease;\n\n  &:hover{\n    cursor: pointer;\n    background-size: 400px;\n  }\n`;\n\nconst Contenedor = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 5rem;\n  flex-direction: column;\n`;\n\nfunction App() {\n\n  // ¬ State de frases\n  const [ frase, setFrase ] = useState( {} );\n\n  // ¬ Consultar API de frases usando FETCH y .then\n  // const consultarAPI = () => {\n  // Conecta a la URL\n  // const api = fetch( 'https://breaking-bad-quotes.herokuapp.com/v1/quotes' );\n  // Se obtiene la respuesta que es una frase de Breaking Bad\n  // const frase = api.then( respuesta => respuesta.json() );\n  // Se aplica un segundo.then para acceder a los valores obtenidos\n  // frase.then( api => console.log( api ) );\n  // }\n\n  //¬ Consultar API de frases usando async-await (mejor método)\n  // ¬ En cada await la ejecución del código de pausa hasta que se completa la instrucción\n  const consultarAPI = async () => {\n    const api = await fetch( 'https://breaking-bad-quotes.herokuapp.com/v1/quotes' );\n    const frase = await api.json();\n    // Añade la frase obtenida al state para su uso\n    setFrase( frase[ 0 ] );\n  };\n\n  // Cargar una frase al abrir la página\n  useEffect( () => {\n    consultarAPI()\n  }, [] )\n\n  return (\n    <Contenedor>\n      <Frase\n        frase={ frase }\n      />\n      <Boton\n        onClick={ consultarAPI }\n      >\n        Get Quote\n      </Boton>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);"],"sourceRoot":""}