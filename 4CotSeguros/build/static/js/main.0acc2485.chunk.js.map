{"version":3,"sources":["components/Header.jsx","Helpers.js","components/Formulario.jsx","components/Resumen.jsx","components/Resultado.jsx","components/Spinner.jsx","App.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","setResumen","setCargando","useState","marca","year","plan","datos","setDatos","error","setError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","htmlFor","onChange","defaultValue","disabled","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0acc2485.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorHeader = styled.header`\r\n  background-color: #26C6DA;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  font-family: 'Slabo 27px', serif;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = ( { titulo } ) => {\r\n  return (\r\n    <ContenedorHeader>\r\n      <TextoHeader>{ titulo }</TextoHeader>\r\n    </ContenedorHeader>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","// Obtiene la diferencia de años\r\nexport function obtenerDiferenciaYear( year ) {\r\n  return new Date().getFullYear() - year;\r\n}\r\n\r\n// Calcula el total a pagar según la marca\r\nexport function calcularMarca( marca ) {\r\n  let incremento;\r\n\r\n  switch ( marca ) {\r\n    case 'europeo':\r\n      incremento = 1.30;\r\n      break;\r\n\r\n    case 'americano':\r\n      incremento = 1.15;\r\n      break;\r\n\r\n    case 'asiatico':\r\n      incremento = 1.05;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return incremento;\r\n}\r\n\r\n// Calcula el tipo de seguro\r\nexport function obtenerPlan( plan ) {\r\n  return ( plan === 'basico' ) ? 1.20 : 1.50;\r\n}\r\n\r\n// Muestra la primer letra Mayúscula\r\nexport function primeraMayuscula( texto ) {\r\n  // Selecciona la primera letra de la palabra, la transforma a mayúscula, luego elmina la letra en minúscula y añade el resto del texto\r\n  return texto.charAt( 0 ).toUpperCase() + texto.slice( 1 );\r\n}","import styled from \"@emotion/styled\";\r\nimport { useState } from \"react\";\r\nimport { calcularMarca, obtenerDiferenciaYear, obtenerPlan } from \"../Helpers\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Campo = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: 1px solid #e1e1e1;\r\n  -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n  background-color: #00838F;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  color: #FFFFFF;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  border: none;\r\n  transition: background-color .3s ease;\r\n  margin-top: 2rem;\r\n\r\n  &:hover{\r\n    background-color: #26c6da;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n  color: White;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\n\r\n// ¿ Inicial\r\nconst Formulario = ( { setResumen, setCargando } ) => {\r\n\r\n  const [ datos, setDatos ] = useState( {\r\n    marca: '',\r\n    year: '',\r\n    plan: ''\r\n  } );\r\n  const [ error, setError ] = useState( false );\r\n\r\n  // Extraer los valores del state\r\n  const { marca, year, plan } = datos;\r\n\r\n  // Leer datos del formulario y colocar los datos en el state\r\n  const obtenerInformacion = e => {\r\n    setDatos( {\r\n      ...datos,\r\n      [ e.target.name ]: e.target.value\r\n    } )\r\n  }\r\n\r\n  // ¬ Cuando el usuario presiona submit\r\n  const cotizarSeguro = e => {\r\n    e.preventDefault();\r\n\r\n    if ( marca.trim() === '' || year.trim() === '' || plan.trim() === '' ) {\r\n      setError( true );\r\n      return;\r\n    }\r\n\r\n    setError( false );\r\n\r\n    // Una base de 2000 $$$ seguro\r\n    let resultado = 2000;\r\n\r\n    // Obtener la diferencia de años\r\n    const diferencia = obtenerDiferenciaYear( year );\r\n\r\n\r\n    // Por cada año hay que restar el 3% del valor\r\n    resultado -= ( ( diferencia * 3 ) * resultado ) / 100;\r\n\r\n\r\n    // Incremento al valor\r\n    // Americano +15%\r\n    // Asiatico +5%\r\n    // Europeo +30%\r\n    resultado = calcularMarca( marca ) * resultado;\r\n\r\n\r\n    // Plan básico +20%\r\n    // Plan Completo +50%\r\n    const incrementoPlan = obtenerPlan( plan );\r\n    resultado = parseFloat( incrementoPlan * resultado ).toFixed( 2 );\r\n\r\n    // Total\r\n    setCargando( true );\r\n\r\n    setTimeout( () => {\r\n      // Eliminar el Spinner\r\n      setCargando( false );\r\n\r\n      // Pasa la información al componente principal\r\n      setResumen( {\r\n        cotizacion: Number( resultado ),\r\n        datos\r\n      } );\r\n    }, 3000 );\r\n  }\r\n\r\n\r\n  return (\r\n    <form\r\n      onSubmit={ cotizarSeguro }\r\n    >\r\n      { error ?\r\n        <Error>Todos los Campos son Obligatorios</Error>\r\n        :\r\n        null\r\n      }\r\n\r\n      <Campo>\r\n        <Label htmlFor=\"\">Marca</Label>\r\n        <Select\r\n          name=\"marca\"\r\n          value={ marca }\r\n          onChange={ obtenerInformacion }\r\n        >\r\n          <option value=\"\" defaultValue disabled>-- Seleccione --</option>\r\n          <option value=\"americano\">Americano</option>\r\n          <option value=\"europeo\">Europeo</option>\r\n          <option value=\"asiatico\">Asiatico</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label htmlFor=\"\">Año</Label>\r\n        <Select\r\n          name=\"year\"\r\n          value={ year }\r\n          onChange={ obtenerInformacion }\r\n        >\r\n          <option value=\"\" defaultValue disabled>-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label htmlFor=\"\">Plan</Label>\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"basico\"\r\n          checked={ plan === \"basico\" }\r\n          onChange={ obtenerInformacion }\r\n        /> Básico\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"completo\"\r\n          checked={ plan === \"completo\" }\r\n          onChange={ obtenerInformacion }\r\n        /> Completo\r\n      </Campo>\r\n\r\n      <Boton\r\n        type=\"submit\"\r\n      >Cotizar\r\n      </Boton>\r\n    </form>\r\n  );\r\n}\r\n\r\nFormulario.propTypes = {\r\n  setResumen: PropTypes.func.isRequired,\r\n  setCargando: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import styled from \"@emotion/styled\";\r\nimport { primeraMayuscula } from \"../Helpers\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorResumen = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background-color: #00838F;\r\n  color: #FFFFFF;\r\n  margin-top: 1rem;\r\n`;\r\n\r\n\r\nconst Resumen = ( { datos } ) => {\r\n\r\n  // extraer de datos\r\n  const { marca, year, plan } = datos;\r\n\r\n  if ( marca === '' || year === '' || plan === '' ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ContenedorResumen>\r\n      <h2>Resumen de Cotización</h2>\r\n      <ul>\r\n        <li>Marca: { primeraMayuscula( marca ) }</li>\r\n        <li>Plan: { primeraMayuscula( plan ) }</li>\r\n        <li>Año del Auto: { year }</li>\r\n      </ul>\r\n    </ContenedorResumen>\r\n  );\r\n}\r\n\r\nResumen.propTypes = {\r\n  datos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Resumen;","import styled from \"@emotion/styled\";\r\n// componentes que permiten animaciones CSS\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Mensaje = styled.p`\r\n  background-color: rgb(127,224,237);\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n  text-align: center;\r\n  padding: 0.5rem;\r\n  border: 1px solid #26c6da;\r\n  background-color: rgb(127,224,237);\r\n  margin-top: 1rem;\r\n  position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n  color: #00838F;\r\n  padding: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`;\r\n\r\nconst Resultado = ( { cotizacion } ) => {\r\n\r\n\r\n  return (\r\n    ( cotizacion === 0 ) ?\r\n      <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n      :\r\n      (\r\n        <ResultadoCotizacion>\r\n          <TransitionGroup\r\n            component=\"span\"\r\n            className=\"resultado\"\r\n          >\r\n            <CSSTransition\r\n              classNames=\"resultado\"\r\n              key={ cotizacion }\r\n              timeout={ { enter: 500, exit: 500 } }\r\n            >\r\n              <TextoCotizacion>El total es: $ <span>{ cotizacion }</span></TextoCotizacion>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </ResultadoCotizacion>\r\n      )\r\n  );\r\n}\r\n\r\nResultado.propTypes = {\r\n  cotizacion: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Resultado;","import './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-chase\">\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\n\n\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  // ¬ States\n\n  const [ resumen, setResumen ] = useState( {\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  } );\n\n  const [ cargando, setCargando ] = useState( false );\n\n  // Extraer datos\n  const { cotizacion, datos } = resumen;\n\n  return (\n    <Contenedor>\n      <Header\n        titulo='Cotizador de Seguros'\n      />\n\n      <ContenedorFormulario>\n        <Formulario\n          setResumen={ setResumen }\n          setCargando={ setCargando }\n        />\n\n        { cargando ? <Spinner /> : null }\n\n        <Resumen\n          datos={ datos }\n        />\n\n        { !cargando ?\n          <Resultado\n            cotizacion={ cotizacion }\n          /> : null\n        }\n\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);"],"sourceRoot":""}