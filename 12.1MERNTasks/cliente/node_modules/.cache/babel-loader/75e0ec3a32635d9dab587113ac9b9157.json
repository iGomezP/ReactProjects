{"ast":null,"code":"import _regeneratorRuntime from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useReducer}from\"react\";import TareaContext from\"./TareaContext\";import TareaReducer from\"./TareaReducer\";import clienteAxios from\"../../config/axios\";import{TAREAS_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA// ESTADO_TAREA,\n,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA}from\"../../types\";import{jsx as _jsx}from\"react/jsx-runtime\";var TareaState=function TareaState(props){var initialState={tareasProyecto:[],errorTarea:false,tareaSeleccionada:null};// Crear dispatch y state\nvar _useReducer=useReducer(TareaReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Crear las funciones\n// Obtener las tareas de un proyecto\nvar obtenerTareas=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(proyecto){var resultado;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return clienteAxios.get('/api/tareas',{params:{proyecto:proyecto}});case 3:resultado=_context.sent;// console.log( resultado.data.tareas );\ndispatch({type:TAREAS_PROYECTO,payload:resultado.data.tareas});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function obtenerTareas(_x){return _ref.apply(this,arguments);};}();// Agregar una tarea al proyecto seleccionado\nvar agregarTarea=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tarea){var resultado;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return clienteAxios.post('/api/tareas',tarea);case 2:resultado=_context2.sent;console.log(resultado);try{dispatch({type:AGREGAR_TAREA,payload:tarea});}catch(error){console.log(error);}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function agregarTarea(_x2){return _ref2.apply(this,arguments);};}();// Valida y muestra un error en caso de que sea necesario\nvar validarTarea=function validarTarea(){dispatch({type:VALIDAR_TAREA});};// Eliminar tarea por id\nvar eliminarTarea=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id,proyecto){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return clienteAxios.delete(\"/api/tareas/\".concat(id),{params:{proyecto:proyecto}});case 3:dispatch({type:ELIMINAR_TAREA,payload:id});_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function eliminarTarea(_x3,_x4){return _ref3.apply(this,arguments);};}();// Cambia el estado de cada tarea\n// const cambiarEstadoTarea = tarea => {\n//   dispatch( {\n//     type: ESTADO_TAREA,\n//     payload: tarea\n//   } )\n// }\n// Edita o modifica una tarea\nvar actualizarTarea=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tarea){var resultado;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return clienteAxios.put(\"/api/tareas/\".concat(tarea._id),tarea);case 3:resultado=_context4.sent;// console.log( resultado.data.tareaExiste );\ndispatch({type:ACTUALIZAR_TAREA,payload:resultado.data.tareaExiste});_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function actualizarTarea(_x5){return _ref4.apply(this,arguments);};}();// Extrae la tarea para edición\nvar guardarTareaActual=function guardarTareaActual(tarea){dispatch({type:TAREA_ACTUAL,payload:tarea});};// Elimina la tarea seleccionada\nvar limpiarTarea=function limpiarTarea(){dispatch({type:LIMPIAR_TAREA});};return/*#__PURE__*/_jsx(TareaContext.Provider,{value:{// ¿ States\ntareasProyecto:state.tareasProyecto,errorTarea:state.errorTarea,tareaSeleccionada:state.tareaSeleccionada,// ¿ Funciones\nobtenerTareas:obtenerTareas,agregarTarea:agregarTarea,validarTarea:validarTarea,eliminarTarea:eliminarTarea,// cambiarEstadoTarea,\nguardarTareaActual:guardarTareaActual,actualizarTarea:actualizarTarea,limpiarTarea:limpiarTarea},children:props.children});};export default TareaState;","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/tareas/TareaState.jsx"],"names":["useReducer","TareaContext","TareaReducer","clienteAxios","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareasProyecto","errorTarea","tareaSeleccionada","state","dispatch","obtenerTareas","proyecto","get","params","resultado","type","payload","data","tareas","console","log","agregarTarea","tarea","post","error","validarTarea","eliminarTarea","id","delete","actualizarTarea","put","_id","tareaExiste","guardarTareaActual","limpiarTarea","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport {\n  TAREAS_PROYECTO,\n  AGREGAR_TAREA,\n  VALIDAR_TAREA,\n  ELIMINAR_TAREA,\n  // ESTADO_TAREA,\n  TAREA_ACTUAL,\n  ACTUALIZAR_TAREA,\n  LIMPIAR_TAREA\n\n} from \"../../types\";\n\nconst TareaState = props => {\n  const initialState = {\n    tareasProyecto: [],\n    errorTarea: false,\n    tareaSeleccionada: null\n  }\n\n  // Crear dispatch y state\n  const [ state, dispatch ] = useReducer( TareaReducer, initialState );\n\n  // Crear las funciones\n\n\n  // Obtener las tareas de un proyecto\n  const obtenerTareas = async proyecto => {\n\n    try {\n      // Cuando se usa params en el cliente, en el servidor debe usarse req.query en lugar de req.body\n      const resultado = await clienteAxios.get( '/api/tareas', { params: { proyecto } } );\n      // console.log( resultado.data.tareas );\n\n      dispatch( {\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      } );\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Agregar una tarea al proyecto seleccionado\n  const agregarTarea = async tarea => {\n\n    const resultado = await clienteAxios.post( '/api/tareas', tarea );\n    console.log( resultado );\n\n    try {\n\n      dispatch( {\n        type: AGREGAR_TAREA,\n        payload: tarea\n      } );\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Valida y muestra un error en caso de que sea necesario\n  const validarTarea = () => {\n    dispatch( {\n      type: VALIDAR_TAREA\n    } )\n  }\n\n  // Eliminar tarea por id\n  const eliminarTarea = async ( id, proyecto ) => {\n\n    try {\n\n      await clienteAxios.delete( `/api/tareas/${ id }`, { params: { proyecto } } );\n\n      dispatch( {\n        type: ELIMINAR_TAREA,\n        payload: id\n      } )\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Cambia el estado de cada tarea\n  // const cambiarEstadoTarea = tarea => {\n  //   dispatch( {\n  //     type: ESTADO_TAREA,\n  //     payload: tarea\n  //   } )\n  // }\n\n  // Edita o modifica una tarea\n  const actualizarTarea = async tarea => {\n\n    try {\n\n      const resultado = await clienteAxios.put( `/api/tareas/${ tarea._id }`, tarea );\n      // console.log( resultado.data.tareaExiste );\n\n      dispatch( {\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tareaExiste\n      } )\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n\n  // Extrae la tarea para edición\n  const guardarTareaActual = tarea => {\n    dispatch( {\n      type: TAREA_ACTUAL,\n      payload: tarea\n    } )\n  }\n\n\n  // Elimina la tarea seleccionada\n  const limpiarTarea = () => {\n    dispatch( {\n      type: LIMPIAR_TAREA\n    } )\n  }\n\n  return (\n    <TareaContext.Provider\n      value={ {\n\n        // ¿ States\n        tareasProyecto: state.tareasProyecto,\n        errorTarea: state.errorTarea,\n        tareaSeleccionada: state.tareaSeleccionada,\n\n        // ¿ Funciones\n        obtenerTareas,\n        agregarTarea,\n        validarTarea,\n        eliminarTarea,\n        // cambiarEstadoTarea,\n        guardarTareaActual,\n        actualizarTarea,\n        limpiarTarea\n\n      } }\n    >\n      { props.children }\n    </TareaContext.Provider>\n  )\n\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}