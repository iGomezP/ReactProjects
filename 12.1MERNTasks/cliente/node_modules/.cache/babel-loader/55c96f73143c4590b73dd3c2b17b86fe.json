{"ast":null,"code":"import _defineProperty from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment,useState,useContext}from\"react\";import ProyectoContext from\"../../context/proyectos/ProyectoContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NuevoProyecto=function NuevoProyecto(){// Obtener el state del formulario\nvar proyectosContext=useContext(ProyectoContext);var formulario=proyectosContext.formulario,errorFormulario=proyectosContext.errorFormulario,mostrarFormulario=proyectosContext.mostrarFormulario,agregarProyecto=proyectosContext.agregarProyecto,mostrarError=proyectosContext.mostrarError;// State para proyecto\nvar _useState=useState({nombre:''}),_useState2=_slicedToArray(_useState,2),proyecto=_useState2[0],setProyecto=_useState2[1];// Lee los contenidos del input\nvar onChangeProyecto=function onChangeProyecto(e){setProyecto(_objectSpread(_objectSpread({},proyecto),{},_defineProperty({},e.target.name,e.target.value)));};// Extraer nombre de proyecto\nvar nombre=proyecto.nombre;// Cuando el usuario envía un proyecto\nvar onSubmitProyecto=function onSubmitProyecto(e){e.preventDefault();// Validar proyecto\nif(nombre===''){mostrarError();return;}// Agregar al state\nagregarProyecto(proyecto);// Reiniciar el form\nsetProyecto({nombre:''});};// Mostrar el formulario\nvar onClickFormulario=function onClickFormulario(){mostrarFormulario();};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-block btn-primario\",onClick:onClickFormulario,children:\"Nuevo Proyecto\"}),formulario?/*#__PURE__*/_jsxs(\"form\",{className:\"formulario-nuevo-proyecto\",onSubmit:onSubmitProyecto,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nombre\",id:\"\",className:\"input-text\",placeholder:\"Nombre del Proyecto\",onChange:onChangeProyecto,value:nombre}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Agregar Proyecto\",className:\"btn btn-primario btn-block\"})]}):null,errorFormulario?/*#__PURE__*/_jsx(\"p\",{className:\"mensaje error\",children:\"El Nombre del Proyecto es Obligatorio\"}):null]});};export default NuevoProyecto;","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/components/proyectos/NuevoProyecto.jsx"],"names":["Fragment","useState","useContext","ProyectoContext","NuevoProyecto","proyectosContext","formulario","errorFormulario","mostrarFormulario","agregarProyecto","mostrarError","nombre","proyecto","setProyecto","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario"],"mappings":"sfAAA,OAASA,QAAT,CAAmBC,QAAnB,CAA6BC,UAA7B,KAA+C,OAA/C,CACA,MAAOC,CAAAA,eAAP,KAA4B,yCAA5B,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAE1B;AACA,GAAMC,CAAAA,gBAAgB,CAAGH,UAAU,CAAEC,eAAF,CAAnC,CACA,GAEEG,CAAAA,UAFF,CAQID,gBARJ,CAEEC,UAFF,CAGEC,eAHF,CAQIF,gBARJ,CAGEE,eAHF,CAKEC,iBALF,CAQIH,gBARJ,CAKEG,iBALF,CAMEC,eANF,CAQIJ,gBARJ,CAMEI,eANF,CAOEC,YAPF,CAQIL,gBARJ,CAOEK,YAPF,CAUA;AACA,cAAkCT,QAAQ,CAAE,CAC1CU,MAAM,CAAE,EADkC,CAAF,CAA1C,wCAAQC,QAAR,eAAkBC,WAAlB,eAKA;AACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,CAAC,CAAI,CAC5BF,WAAW,gCACND,QADM,wBAEPG,CAAC,CAACC,MAAF,CAASC,IAFF,CAEUF,CAAC,CAACC,MAAF,CAASE,KAFnB,GAAX,CAID,CALD,CAOA;AACA,GAAQP,CAAAA,MAAR,CAAmBC,QAAnB,CAAQD,MAAR,CAEA;AACA,GAAMQ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAJ,CAAC,CAAI,CAC5BA,CAAC,CAACK,cAAF,GAEA;AACA,GAAKT,MAAM,GAAK,EAAhB,CAAqB,CACnBD,YAAY,GACZ,OACD,CAGD;AACAD,eAAe,CAAEG,QAAF,CAAf,CAGA;AACAC,WAAW,CAAE,CACXF,MAAM,CAAE,EADG,CAAF,CAAX,CAID,CAnBD,CAqBA;AACA,GAAMU,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9Bb,iBAAiB,GAClB,CAFD,CAKA,mBACE,MAAC,QAAD,yBAEE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,4BAFZ,CAGE,OAAO,CAAGa,iBAHZ,4BAFF,CAYIf,UAAU,cACN,cACA,SAAS,CAAC,2BADV,CAEA,QAAQ,CAAGa,gBAFX,wBAIA,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,QAFP,CAGE,EAAE,CAAC,EAHL,CAIE,SAAS,CAAC,YAJZ,CAKE,WAAW,CAAC,qBALd,CAME,QAAQ,CAAGL,gBANb,CAOE,KAAK,CAAGH,MAPV,EAJA,cAeA,cACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,kBAFR,CAGE,SAAS,CAAC,4BAHZ,EAfA,GADM,CAwBR,IApCN,CAyCIJ,eAAe,cACb,UAAG,SAAS,CAAC,eAAb,mDADa,CAKb,IA9CN,GADF,CAoDD,CA/GD,CAiHA,cAAeH,CAAAA,aAAf","sourcesContent":["import { Fragment, useState, useContext } from \"react\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n  // Obtener el state del formulario\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const {\r\n    // ¿ States\r\n    formulario,\r\n    errorFormulario,\r\n    // ¿ Funciones\r\n    mostrarFormulario,\r\n    agregarProyecto,\r\n    mostrarError\r\n  } = proyectosContext;\r\n\r\n  // State para proyecto\r\n  const [ proyecto, setProyecto ] = useState( {\r\n    nombre: ''\r\n  } );\r\n\r\n\r\n  // Lee los contenidos del input\r\n  const onChangeProyecto = e => {\r\n    setProyecto( {\r\n      ...proyecto,\r\n      [ e.target.name ]: e.target.value\r\n    } );\r\n  }\r\n\r\n  // Extraer nombre de proyecto\r\n  const { nombre } = proyecto;\r\n\r\n  // Cuando el usuario envía un proyecto\r\n  const onSubmitProyecto = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar proyecto\r\n    if ( nombre === '' ) {\r\n      mostrarError();\r\n      return;\r\n    }\r\n\r\n\r\n    // Agregar al state\r\n    agregarProyecto( proyecto );\r\n\r\n\r\n    // Reiniciar el form\r\n    setProyecto( {\r\n      nombre: ''\r\n    } );\r\n\r\n  }\r\n\r\n  // Mostrar el formulario\r\n  const onClickFormulario = () => {\r\n    mostrarFormulario();\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={ onClickFormulario }\r\n      >\r\n        Nuevo Proyecto\r\n      </button>\r\n\r\n      {/* Si formulario existe que se muestre, de lo contrario se oculta */ }\r\n      {\r\n        formulario ?\r\n          ( <form\r\n            className=\"formulario-nuevo-proyecto\"\r\n            onSubmit={ onSubmitProyecto }\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              id=\"\"\r\n              className=\"input-text\"\r\n              placeholder=\"Nombre del Proyecto\"\r\n              onChange={ onChangeProyecto }\r\n              value={ nombre }\r\n\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Agregar Proyecto\"\r\n              className=\"btn btn-primario btn-block\"\r\n            />\r\n\r\n          </form> )\r\n          :\r\n          null\r\n      }\r\n\r\n      {/* Revisa si el error del formulario es verdadero o falso */ }\r\n      {\r\n        errorFormulario ?\r\n          <p className=\"mensaje error\">\r\n            El Nombre del Proyecto es Obligatorio\r\n          </p>\r\n          :\r\n          null\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NuevoProyecto;"]},"metadata":{},"sourceType":"module"}