{"ast":null,"code":"var _jsxFileName = \"/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/tareas/TareaState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareas: [{\n      id: 1,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 1\n    }, {\n      id: 2,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 3,\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 3\n    }, {\n      id: 4,\n      nombre: 'Elegir Hosting',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 5,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 1\n    }, {\n      id: 6,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 7,\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 3\n    }, {\n      id: 8,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 9,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 1\n    }, {\n      id: 10,\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 11,\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 3\n    }, {\n      id: 12,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 4\n    }, {\n      id: 13,\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 3\n    }],\n    tareasProyecto: null,\n    errorTarea: false,\n    tareaSeleccionada: null\n  }; // Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); // Crear las funciones\n  // Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; // Agregar una tarea al proyecto seleccionado\n\n\n  const agregarTarea = tarea => {\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  }; // Valida y muestra un error en caso de que sea necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; // Eliminar tarea por id\n\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; // Cambia el estado de cada tarea\n\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  }; // Extrae la tarea para edición\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      // ¿ States\n      tareas: state.tareas,\n      tareasProyecto: state.tareasProyecto,\n      errorTarea: state.errorTarea,\n      // ¿ Funciones\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea,\n      guardarTareaActual\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TareaState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/tareas/TareaState.jsx"],"names":["useContext","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","TareaState","props","initialState","tareas","id","nombre","estado","proyectoId","tareasProyecto","errorTarea","tareaSeleccionada","state","dispatch","obtenerTareas","type","payload","agregarTarea","tarea","validarTarea","eliminarTarea","cambiarEstadoTarea","guardarTareaActual","children"],"mappings":"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","sourcesContent":["import { useContext, useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport {\n  TAREAS_PROYECTO,\n  AGREGAR_TAREA,\n  VALIDAR_TAREA,\n  ELIMINAR_TAREA,\n  ESTADO_TAREA,\n  TAREA_ACTUAL\n} from \"../../types\";\n\nconst TareaState = props => {\n  const initialState = {\n    tareas: [\n      { id: 1, nombre: 'Elegir Plataforma', estado: true, proyectoId: 1 },\n      { id: 2, nombre: 'Elegir Colores', estado: false, proyectoId: 2 },\n      { id: 3, nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 3 },\n      { id: 4, nombre: 'Elegir Hosting', estado: true, proyectoId: 4 },\n      { id: 5, nombre: 'Elegir Plataforma', estado: true, proyectoId: 1 },\n      { id: 6, nombre: 'Elegir Colores', estado: false, proyectoId: 2 },\n      { id: 7, nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 3 },\n      { id: 8, nombre: 'Elegir Plataforma', estado: true, proyectoId: 4 },\n      { id: 9, nombre: 'Elegir Colores', estado: false, proyectoId: 1 },\n      { id: 10, nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 2 },\n      { id: 11, nombre: 'Elegir Plataforma', estado: true, proyectoId: 3 },\n      { id: 12, nombre: 'Elegir Colores', estado: false, proyectoId: 4 },\n      { id: 13, nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 3 }\n    ],\n    tareasProyecto: null,\n    errorTarea: false,\n    tareaSeleccionada: null\n  }\n\n  // Crear dispatch y state\n  const [ state, dispatch ] = useReducer( TareaReducer, initialState );\n\n  // Crear las funciones\n\n\n  // Obtener las tareas de un proyecto\n  const obtenerTareas = proyectoId => {\n    dispatch( {\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    } )\n  }\n\n  // Agregar una tarea al proyecto seleccionado\n  const agregarTarea = tarea => {\n    dispatch( {\n      type: AGREGAR_TAREA,\n      payload: tarea\n    } )\n  }\n\n  // Valida y muestra un error en caso de que sea necesario\n  const validarTarea = () => {\n    dispatch( {\n      type: VALIDAR_TAREA\n    } )\n  }\n\n  // Eliminar tarea por id\n  const eliminarTarea = id => {\n    dispatch( {\n      type: ELIMINAR_TAREA,\n      payload: id\n    } )\n  }\n\n  // Cambia el estado de cada tarea\n  const cambiarEstadoTarea = tarea => {\n    dispatch( {\n      type: ESTADO_TAREA,\n      payload: tarea\n    } )\n  }\n\n  // Extrae la tarea para edición\n  const guardarTareaActual = tarea => {\n    dispatch( {\n      type: TAREA_ACTUAL,\n      payload: tarea\n    } )\n  }\n\n  return (\n    <TareaContext.Provider\n      value={ {\n        // ¿ States\n        tareas: state.tareas,\n        tareasProyecto: state.tareasProyecto,\n        errorTarea: state.errorTarea,\n\n        // ¿ Funciones\n        obtenerTareas,\n        agregarTarea,\n        validarTarea,\n        eliminarTarea,\n        cambiarEstadoTarea,\n        guardarTareaActual\n\n      } }\n    >\n      { props.children }\n    </TareaContext.Provider>\n  )\n\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}