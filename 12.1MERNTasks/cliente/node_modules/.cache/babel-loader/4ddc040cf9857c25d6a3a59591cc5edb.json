{"ast":null,"code":"var _jsxFileName = \"/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/autenticacion/AuthState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport AuthContext from \"./AuthContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  // State inicial\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  }; // Inicializacion del reducer\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // Funciones\n\n  const RegistrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/usuarios', datos); // console.log( respuesta.data );\n\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      // console.log( error.response.data.msg );\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Retorna el usuario autenticado\n\n\n  const usuarioAUtenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {// TODO: Función para enviar el token por headers\n    }\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth');\n    } catch (error) {\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      // ¿ States\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      // ¿ Funciones\n      RegistrarUsuario\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/autenticacion/AuthState.jsx"],"names":["useReducer","AuthContext","AuthReducer","clienteAxios","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","RegistrarUsuario","datos","respuesta","post","type","payload","data","error","alerta","msg","response","categoria","usuarioAUtenticado","get","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,aANF,QAOO,aAPP;;;AASA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEzB;AACA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAsB,OAAtB,CADY;AAEnBC,IAAAA,WAAW,EAAE,IAFM;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB,CAHyB,CAUzB;;AACA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBpB,UAAU,CAAEE,WAAF,EAAeU,YAAf,CAAtC,CAXyB,CAazB;;AACA,QAAMS,gBAAgB,GAAG,MAAMC,KAAN,IAAe;AAEtC,QAAI;AAEF,YAAMC,SAAS,GAAG,MAAMpB,YAAY,CAACqB,IAAb,CAAmB,eAAnB,EAAoCF,KAApC,CAAxB,CAFE,CAGF;;AAEAF,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAErB,gBADE;AAERsB,QAAAA,OAAO,EAAEH,SAAS,CAACI;AAFX,OAAF,CAAR;AAKD,KAVD,CAUE,OAAQC,KAAR,EAAgB;AAChB;AACA,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBG,GADZ;AAEbE,QAAAA,SAAS,EAAE;AAFE,OAAf;AAKAZ,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEpB,cADE;AAERqB,QAAAA,OAAO,EAAEG;AAFD,OAAF,CAAR;AAID;AAEF,GAzBD,CAdyB,CAyCzB;;;AACA,QAAMI,kBAAkB,GAAG,YAAY;AACrC,UAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAsB,OAAtB,CAAd;;AACA,QAAKF,KAAL,EAAa,CACX;AAED;;AAED,QAAI;AACF,YAAMU,SAAS,GAAG,MAAMpB,YAAY,CAAC+B,GAAb,CAAkB,WAAlB,CAAxB;AACD,KAFD,CAEE,OAAQN,KAAR,EAAgB;AAChBR,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEjB;AADE,OAAF,CAAR;AAGD;AACF,GAdD;;AAgBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAG;AACN;AACAK,MAAAA,KAAK,EAAEM,KAAK,CAACN,KAFP;AAGNG,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAHb;AAINC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAJT;AAKNC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OALT;AAMN;AACAG,MAAAA;AAPM,KADV;AAAA,cAWIV,KAAK,CAACwB;AAXV;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAzED;;GAAMzB,S;;KAAAA,S;AA2EN,eAAeA,SAAf","sourcesContent":["import { useReducer } from \"react\";\nimport AuthContext from \"./AuthContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport {\n  REGISTRO_EXITOSO,\n  REGISTRO_ERROR,\n  OBTENER_USUARIO,\n  LOGIN_EXITOSO,\n  LOGIN_ERROR,\n  CERRAR_SESION\n} from \"../../types\";\n\nconst AuthState = props => {\n\n  // State inicial\n  const initialState = {\n    token: localStorage.getItem( 'token' ),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  }\n\n  // Inicializacion del reducer\n  const [ state, dispatch ] = useReducer( AuthReducer, initialState );\n\n  // Funciones\n  const RegistrarUsuario = async datos => {\n\n    try {\n\n      const respuesta = await clienteAxios.post( '/api/usuarios', datos );\n      // console.log( respuesta.data );\n\n      dispatch( {\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      } )\n\n    } catch ( error ) {\n      // console.log( error.response.data.msg );\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      }\n\n      dispatch( {\n        type: REGISTRO_ERROR,\n        payload: alerta\n      } )\n    }\n\n  }\n\n  // Retorna el usuario autenticado\n  const usuarioAUtenticado = async () => {\n    const token = localStorage.getItem( 'token' );\n    if ( token ) {\n      // TODO: Función para enviar el token por headers\n\n    }\n\n    try {\n      const respuesta = await clienteAxios.get( '/api/auth' )\n    } catch ( error ) {\n      dispatch( {\n        type: LOGIN_ERROR\n      } )\n    }\n  }\n\n  return (\n    <AuthContext.Provider\n      value={ {\n        // ¿ States\n        token: state.token,\n        autenticado: state.autenticado,\n        usuario: state.usuario,\n        mensaje: state.mensaje,\n        // ¿ Funciones\n        RegistrarUsuario,\n      } }\n    >\n      { props.children }\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}