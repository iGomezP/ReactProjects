{"ast":null,"code":"var _jsxFileName = \"/home/vakaz/Documentos/React/12MERNTasks/cliente/src/components/rutas/RutaPrivada.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/autenticacion/AuthContext\"; //  Higher Order Component\n// ° Este es un componente que contiene otro componente dentro de él, recibe un componente y los props del mismo\n// ° Su función es tomar autenticado para saber si el usuario está autenticado o no\n// ! Si no está autenticado, se le redirecciona a la página principal\n// ¿ Si está autenticado, se le envía al componente que lo está mandando a llamar con una copia de los props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RutaPrivada = ({\n  component: Component,\n  ...props\n}) => {\n  _s();\n\n  const authContext = useContext(AuthContext);\n  const {\n    autenticado,\n    cargando,\n    UsuarioAutenticado\n  } = authContext;\n  useEffect(() => {\n    UsuarioAutenticado();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Route, { ...props,\n    render: props => !autenticado && !cargando ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RutaPrivada, \"T24PH9MZ4FTss7c6+ol7b1uV7WE=\");\n\n_c = RutaPrivada;\nexport default RutaPrivada;\n\nvar _c;\n\n$RefreshReg$(_c, \"RutaPrivada\");","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/components/rutas/RutaPrivada.jsx"],"names":["useContext","useEffect","Route","Redirect","AuthContext","RutaPrivada","component","Component","props","authContext","autenticado","cargando","UsuarioAutenticado"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,yCAAxB,C,CAEA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,WAAW,GAAG,CAAE;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAF,KAA0C;AAAA;;AAE5D,QAAMC,WAAW,GAAGT,UAAU,CAAEI,WAAF,CAA9B;AACA,QAAM;AAAEM,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAgDH,WAAtD;AAEAR,EAAAA,SAAS,CAAE,MAAM;AACfW,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,KAAD,OACOJ,KADP;AAEE,IAAA,MAAM,EAAGA,KAAK,IAAI,CAACE,WAAD,IAAgB,CAACC,QAAjB,gBAEd,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFc,gBAMd,QAAC,SAAD,OAAgBH;AAAhB;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtBD;;GAAMH,W;;KAAAA,W;AAwBN,eAAeA,WAAf","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/autenticacion/AuthContext\";\n\n//  Higher Order Component\n// ° Este es un componente que contiene otro componente dentro de él, recibe un componente y los props del mismo\n// ° Su función es tomar autenticado para saber si el usuario está autenticado o no\n// ! Si no está autenticado, se le redirecciona a la página principal\n// ¿ Si está autenticado, se le envía al componente que lo está mandando a llamar con una copia de los props\nconst RutaPrivada = ( { component: Component, ...props } ) => {\n\n  const authContext = useContext( AuthContext );\n  const { autenticado, cargando, UsuarioAutenticado } = authContext;\n\n  useEffect( () => {\n    UsuarioAutenticado();\n  }, [] )\n\n  return (\n    <Route\n      { ...props }\n      render={ props => !autenticado && !cargando ?\n        (\n          <Redirect to=\"/\" />\n        )\n        :\n        (\n          <Component { ...props } />\n        ) }\n    />\n  );\n}\n\nexport default RutaPrivada;"]},"metadata":{},"sourceType":"module"}