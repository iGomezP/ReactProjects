{"ast":null,"code":"var _jsxFileName = \"/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/tareas/TareaState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareas: [{\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 1\n    }, {\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 3\n    }, {\n      nombre: 'Elegir Hosting',\n      estado: true,\n      proyectoId: 4\n    }, {\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 1\n    }, {\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 3\n    }, {\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 4\n    }, {\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 1\n    }, {\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: 'Elegir Plataforma',\n      estado: true,\n      proyectoId: 3\n    }, {\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 4\n    }, {\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false,\n      proyectoId: 3\n    }],\n    tareasProyecto: null,\n    errorTarea: false\n  }; // Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); // Crear las funciones\n  // Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; // Agregar una tarea al proyecto seleccionado\n\n\n  const agregarTarea = tarea => {\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  }; // Valida y muestra un error en caso de que sea necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; // Eliminar tarea por id\n\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      // 多 States\n      tareas: state.tareas,\n      tareasProyecto: state.tareasProyecto,\n      errorTarea: state.errorTarea,\n      // 多 Funciones\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TareaState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/tareas/TareaState.jsx"],"names":["useContext","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TareaState","props","initialState","tareas","nombre","estado","proyectoId","tareasProyecto","errorTarea","state","dispatch","obtenerTareas","type","payload","agregarTarea","tarea","validarTarea","eliminarTarea","id","children"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,cAJF,QAKO,aALP;;;AAOA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,CACN;AAAEC,MAAAA,MAAM,EAAE,mBAAV;AAA+BC,MAAAA,MAAM,EAAE,IAAvC;AAA6CC,MAAAA,UAAU,EAAE;AAAzD,KADM,EAEN;AAAEF,MAAAA,MAAM,EAAE,gBAAV;AAA4BC,MAAAA,MAAM,EAAE,KAApC;AAA2CC,MAAAA,UAAU,EAAE;AAAvD,KAFM,EAGN;AAAEF,MAAAA,MAAM,EAAE,4BAAV;AAAwCC,MAAAA,MAAM,EAAE,KAAhD;AAAuDC,MAAAA,UAAU,EAAE;AAAnE,KAHM,EAIN;AAAEF,MAAAA,MAAM,EAAE,gBAAV;AAA4BC,MAAAA,MAAM,EAAE,IAApC;AAA0CC,MAAAA,UAAU,EAAE;AAAtD,KAJM,EAKN;AAAEF,MAAAA,MAAM,EAAE,mBAAV;AAA+BC,MAAAA,MAAM,EAAE,IAAvC;AAA6CC,MAAAA,UAAU,EAAE;AAAzD,KALM,EAMN;AAAEF,MAAAA,MAAM,EAAE,gBAAV;AAA4BC,MAAAA,MAAM,EAAE,KAApC;AAA2CC,MAAAA,UAAU,EAAE;AAAvD,KANM,EAON;AAAEF,MAAAA,MAAM,EAAE,4BAAV;AAAwCC,MAAAA,MAAM,EAAE,KAAhD;AAAuDC,MAAAA,UAAU,EAAE;AAAnE,KAPM,EAQN;AAAEF,MAAAA,MAAM,EAAE,mBAAV;AAA+BC,MAAAA,MAAM,EAAE,IAAvC;AAA6CC,MAAAA,UAAU,EAAE;AAAzD,KARM,EASN;AAAEF,MAAAA,MAAM,EAAE,gBAAV;AAA4BC,MAAAA,MAAM,EAAE,KAApC;AAA2CC,MAAAA,UAAU,EAAE;AAAvD,KATM,EAUN;AAAEF,MAAAA,MAAM,EAAE,4BAAV;AAAwCC,MAAAA,MAAM,EAAE,KAAhD;AAAuDC,MAAAA,UAAU,EAAE;AAAnE,KAVM,EAWN;AAAEF,MAAAA,MAAM,EAAE,mBAAV;AAA+BC,MAAAA,MAAM,EAAE,IAAvC;AAA6CC,MAAAA,UAAU,EAAE;AAAzD,KAXM,EAYN;AAAEF,MAAAA,MAAM,EAAE,gBAAV;AAA4BC,MAAAA,MAAM,EAAE,KAApC;AAA2CC,MAAAA,UAAU,EAAE;AAAvD,KAZM,EAaN;AAAEF,MAAAA,MAAM,EAAE,4BAAV;AAAwCC,MAAAA,MAAM,EAAE,KAAhD;AAAuDC,MAAAA,UAAU,EAAE;AAAnE,KAbM,CADW;AAgBnBC,IAAAA,cAAc,EAAE,IAhBG;AAiBnBC,IAAAA,UAAU,EAAE;AAjBO,GAArB,CAD0B,CAqB1B;;AACA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBjB,UAAU,CAAEE,YAAF,EAAgBO,YAAhB,CAAtC,CAtB0B,CAwB1B;AAGA;;AACA,QAAMS,aAAa,GAAGL,UAAU,IAAI;AAClCI,IAAAA,QAAQ,CAAE;AACRE,MAAAA,IAAI,EAAEhB,eADE;AAERiB,MAAAA,OAAO,EAAEP;AAFD,KAAF,CAAR;AAID,GALD,CA5B0B,CAmC1B;;;AACA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC5BL,IAAAA,QAAQ,CAAE;AACRE,MAAAA,IAAI,EAAEf,aADE;AAERgB,MAAAA,OAAO,EAAEE;AAFD,KAAF,CAAR;AAID,GALD,CApC0B,CA2C1B;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,QAAQ,CAAE;AACRE,MAAAA,IAAI,EAAEd;AADE,KAAF,CAAR;AAGD,GAJD,CA5C0B,CAkD1B;;;AACA,QAAMmB,aAAa,GAAGC,EAAE,IAAI;AAC1BR,IAAAA,QAAQ,CAAE;AACRE,MAAAA,IAAI,EAAEb,cADE;AAERc,MAAAA,OAAO,EAAEK;AAFD,KAAF,CAAR;AAID,GALD;;AAOA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAG;AACN;AACAf,MAAAA,MAAM,EAAEM,KAAK,CAACN,MAFR;AAGNI,MAAAA,cAAc,EAAEE,KAAK,CAACF,cAHhB;AAINC,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAJZ;AAMN;AACAG,MAAAA,aAPM;AAQNG,MAAAA,YARM;AASNE,MAAAA,YATM;AAUNC,MAAAA;AAVM,KADV;AAAA,cAeIhB,KAAK,CAACkB;AAfV;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA9ED;;GAAMnB,U;;KAAAA,U;AAgFN,eAAeA,UAAf","sourcesContent":["import { useContext, useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport {\n  TAREAS_PROYECTO,\n  AGREGAR_TAREA,\n  VALIDAR_TAREA,\n  ELIMINAR_TAREA\n} from \"../../types\";\n\nconst TareaState = props => {\n  const initialState = {\n    tareas: [\n      { nombre: 'Elegir Plataforma', estado: true, proyectoId: 1 },\n      { nombre: 'Elegir Colores', estado: false, proyectoId: 2 },\n      { nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 3 },\n      { nombre: 'Elegir Hosting', estado: true, proyectoId: 4 },\n      { nombre: 'Elegir Plataforma', estado: true, proyectoId: 1 },\n      { nombre: 'Elegir Colores', estado: false, proyectoId: 2 },\n      { nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 3 },\n      { nombre: 'Elegir Plataforma', estado: true, proyectoId: 4 },\n      { nombre: 'Elegir Colores', estado: false, proyectoId: 1 },\n      { nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 2 },\n      { nombre: 'Elegir Plataforma', estado: true, proyectoId: 3 },\n      { nombre: 'Elegir Colores', estado: false, proyectoId: 4 },\n      { nombre: 'Elegir Plataformas de Pago', estado: false, proyectoId: 3 }\n    ],\n    tareasProyecto: null,\n    errorTarea: false\n  }\n\n  // Crear dispatch y state\n  const [ state, dispatch ] = useReducer( TareaReducer, initialState );\n\n  // Crear las funciones\n\n\n  // Obtener las tareas de un proyecto\n  const obtenerTareas = proyectoId => {\n    dispatch( {\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    } )\n  }\n\n  // Agregar una tarea al proyecto seleccionado\n  const agregarTarea = tarea => {\n    dispatch( {\n      type: AGREGAR_TAREA,\n      payload: tarea\n    } )\n  }\n\n  // Valida y muestra un error en caso de que sea necesario\n  const validarTarea = () => {\n    dispatch( {\n      type: VALIDAR_TAREA\n    } )\n  }\n\n  // Eliminar tarea por id\n  const eliminarTarea = id => {\n    dispatch( {\n      type: ELIMINAR_TAREA,\n      payload: id\n    } )\n  }\n\n  return (\n    <TareaContext.Provider\n      value={ {\n        // 多 States\n        tareas: state.tareas,\n        tareasProyecto: state.tareasProyecto,\n        errorTarea: state.errorTarea,\n\n        // 多 Funciones\n        obtenerTareas,\n        agregarTarea,\n        validarTarea,\n        eliminarTarea\n\n      } }\n    >\n      { props.children }\n    </TareaContext.Provider>\n  )\n\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}