{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\12MERNTasks\\\\cliente\\\\src\\\\components\\\\proyectos\\\\NuevoProyecto.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useContext } from \"react\";\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NuevoProyecto = () => {\n  _s();\n\n  // Obtener el state del formulario\n  const proyectosContext = useContext(ProyectoContext);\n  const {\n    // ¿ States\n    formulario,\n    errorFormulario,\n    // ¿ Funciones\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError\n  } = proyectosContext; // State para proyecto\n\n  const [proyecto, setProyecto] = useState({\n    nombre: ''\n  }); // Lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    setProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; // Extraer nombre de proyecto\n\n\n  const {\n    nombre\n  } = proyecto; // Cuando el usuario envía un proyecto\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); // Validar proyecto\n\n    if (nombre === '') {\n      mostrarError();\n      return;\n    } // Agregar al state\n\n\n    agregarProyecto(proyecto); // Reiniciar el form\n\n    setProyecto({\n      nombre: ''\n    });\n  }; // Mostrar el formulario\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-block btn-primario\",\n      onClick: onClickFormulario,\n      children: \"Nuevo Proyecto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), formulario ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formulario-nuevo-proyecto\",\n      onSubmit: onSubmitProyecto,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nombre\",\n        id: \"\",\n        className: \"input-text\",\n        placeholder: \"Nombre del Proyecto\",\n        onChange: onChangeProyecto,\n        value: nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Agregar Proyecto\",\n        className: \"btn btn-primario btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this) : null, errorFormulario ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje error\",\n      children: \"El nombre es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NuevoProyecto, \"5t4qWtXaI4bfwb599D52hkYHs4U=\");\n\n_c = NuevoProyecto;\nexport default NuevoProyecto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProyecto\");","map":{"version":3,"sources":["C:/React/12MERNTasks/cliente/src/components/proyectos/NuevoProyecto.jsx"],"names":["Fragment","useState","useContext","ProyectoContext","NuevoProyecto","proyectosContext","formulario","errorFormulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","setProyecto","nombre","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B;AACA,QAAMC,gBAAgB,GAAGH,UAAU,CAAEC,eAAF,CAAnC;AACA,QAAM;AACJ;AACAG,IAAAA,UAFI;AAGJC,IAAAA,eAHI;AAIJ;AACAC,IAAAA,iBALI;AAMJC,IAAAA,eANI;AAOJC,IAAAA;AAPI,MAQFL,gBARJ,CAJ0B,CAc1B;;AACA,QAAM,CAAEM,QAAF,EAAYC,WAAZ,IAA4BX,QAAQ,CAAE;AAC1CY,IAAAA,MAAM,EAAE;AADkC,GAAF,CAA1C,CAf0B,CAoB1B;;AACA,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5BH,IAAAA,WAAW,CAAE,EACX,GAAGD,QADQ;AAEX,OAAEI,CAAC,CAACC,MAAF,CAASC,IAAX,GAAmBF,CAAC,CAACC,MAAF,CAASE;AAFjB,KAAF,CAAX;AAID,GALD,CArB0B,CA4B1B;;;AACA,QAAM;AAAEL,IAAAA;AAAF,MAAaF,QAAnB,CA7B0B,CA+B1B;;AACA,QAAMQ,gBAAgB,GAAGJ,CAAC,IAAI;AAC5BA,IAAAA,CAAC,CAACK,cAAF,GAD4B,CAG5B;;AACA,QAAKP,MAAM,KAAK,EAAhB,EAAqB;AACnBH,MAAAA,YAAY;AACZ;AACD,KAP2B,CAU5B;;;AACAD,IAAAA,eAAe,CAAEE,QAAF,CAAf,CAX4B,CAc5B;;AACAC,IAAAA,WAAW,CAAE;AACXC,MAAAA,MAAM,EAAE;AADG,KAAF,CAAX;AAID,GAnBD,CAhC0B,CAqD1B;;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9Bb,IAAAA,iBAAiB;AAClB,GAFD;;AAKA,sBACE,QAAC,QAAD;AAAA,4BAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAGE,MAAA,OAAO,EAAGa,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAYIf,UAAU,gBACN;AACA,MAAA,SAAS,EAAC,2BADV;AAEA,MAAA,QAAQ,EAAGa,gBAFX;AAAA,8BAIA;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,EAAE,EAAC,EAHL;AAIE,QAAA,SAAS,EAAC,YAJZ;AAKE,QAAA,WAAW,EAAC,qBALd;AAME,QAAA,QAAQ,EAAGL,gBANb;AAOE,QAAA,KAAK,EAAGD;AAPV;AAAA;AAAA;AAAA;AAAA,cAJA,eAeA;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,kBAFR;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAfA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAwBR,IApCN,EAyCIN,eAAe,gBACb;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,GAKb,IA9CN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CA/GD;;GAAMH,a;;KAAAA,a;AAiHN,eAAeA,aAAf","sourcesContent":["import { Fragment, useState, useContext } from \"react\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n  // Obtener el state del formulario\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const {\r\n    // ¿ States\r\n    formulario,\r\n    errorFormulario,\r\n    // ¿ Funciones\r\n    mostrarFormulario,\r\n    agregarProyecto,\r\n    mostrarError\r\n  } = proyectosContext;\r\n\r\n  // State para proyecto\r\n  const [ proyecto, setProyecto ] = useState( {\r\n    nombre: ''\r\n  } );\r\n\r\n\r\n  // Lee los contenidos del input\r\n  const onChangeProyecto = e => {\r\n    setProyecto( {\r\n      ...proyecto,\r\n      [ e.target.name ]: e.target.value\r\n    } );\r\n  }\r\n\r\n  // Extraer nombre de proyecto\r\n  const { nombre } = proyecto;\r\n\r\n  // Cuando el usuario envía un proyecto\r\n  const onSubmitProyecto = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar proyecto\r\n    if ( nombre === '' ) {\r\n      mostrarError();\r\n      return;\r\n    }\r\n\r\n\r\n    // Agregar al state\r\n    agregarProyecto( proyecto );\r\n\r\n\r\n    // Reiniciar el form\r\n    setProyecto( {\r\n      nombre: ''\r\n    } );\r\n\r\n  }\r\n\r\n  // Mostrar el formulario\r\n  const onClickFormulario = () => {\r\n    mostrarFormulario();\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={ onClickFormulario }\r\n      >\r\n        Nuevo Proyecto\r\n      </button>\r\n\r\n      {/* Si formulario existe que se muestre, de lo contrario se oculta */ }\r\n      {\r\n        formulario ?\r\n          ( <form\r\n            className=\"formulario-nuevo-proyecto\"\r\n            onSubmit={ onSubmitProyecto }\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              id=\"\"\r\n              className=\"input-text\"\r\n              placeholder=\"Nombre del Proyecto\"\r\n              onChange={ onChangeProyecto }\r\n              value={ nombre }\r\n\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Agregar Proyecto\"\r\n              className=\"btn btn-primario btn-block\"\r\n            />\r\n\r\n          </form> )\r\n          :\r\n          null\r\n      }\r\n\r\n      {/* Revisa si el error del formulario es verdadero o falso */ }\r\n      {\r\n        errorFormulario ?\r\n          <p className=\"mensaje error\">\r\n            El nombre es obligatorio\r\n          </p>\r\n          :\r\n          null\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NuevoProyecto;"]},"metadata":{},"sourceType":"module"}