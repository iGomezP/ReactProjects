{"ast":null,"code":"import _defineProperty from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vakaz/Documentos/React/12MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useState,useEffect}from\"react\";import ProyectoContext from\"../../context/proyectos/ProyectoContext\";import TareaContext from\"../../context/tareas/TareaContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormTarea=function FormTarea(){// Extraer si un proyecto est치 activo\nvar proyectosContext=useContext(ProyectoContext);var proyecto=proyectosContext.proyecto;// Obtener la funcion del context de tarea\nvar tareasContext=useContext(TareaContext);var tareaSeleccionada=tareasContext.tareaSeleccionada,errorTarea=tareasContext.errorTarea,obtenerTareas=tareasContext.obtenerTareas,agregarTarea=tareasContext.agregarTarea,validarTarea=tareasContext.validarTarea,actualizarTarea=tareasContext.actualizarTarea,limpiarTarea=tareasContext.limpiarTarea;// Effect que detecta si hay una tarea seleccionada\nuseEffect(function(){if(tareaSeleccionada!==null){setTarea(tareaSeleccionada);}else{setTarea({nombre:''});}},[tareaSeleccionada]);// State del formulario\nvar _useState=useState({nombre:''}),_useState2=_slicedToArray(_useState,2),tarea=_useState2[0],setTarea=_useState2[1];// Extraer el nombre del proyecto\nvar nombre=tarea.nombre;// Si no hay proyecto seleccionado\nif(!proyecto){return null;}// Array destructuring para extraer el proyecto actual\nvar _proyecto=_slicedToArray(proyecto,1),proyectoActual=_proyecto[0];// Leer los valores del formulario\nvar handleChange=function handleChange(e){setTarea(_objectSpread(_objectSpread({},tarea),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();// Validar\nif(nombre.trim()===''){validarTarea();return;}// Si es edici칩n o si es nueva tarea\nif(tareaSeleccionada===null){// Agregar la tarea nueva al state de tareas, se iguala el id y se pasan las tareas en false\ntarea.proyecto=proyectoActual._id;agregarTarea(tarea);}else{// Actualizar tarea existente\nactualizarTarea(tarea);// Elimina tareaSeleccionara del state\nlimpiarTarea();}// Obtener y filtrar las tareas del proyecto actual\nobtenerTareas(proyectoActual.id);// Reiniciar el Form\nsetTarea({nombre:''});};return/*#__PURE__*/_jsxs(\"div\",{className:\"formulario\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"contenedor-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nombre\",id:\"\",className:\"input-text\",placeholder:\"Nombre Tarea...\",value:nombre,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"contenedor-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:tareaSeleccionada?'Editar Tarea':'Agregar Tarea',className:\"btn btn-primario btn-submit btn-block\"})})]}),errorTarea?/*#__PURE__*/_jsx(\"p\",{className:\"mensaje error\",children:\"El nombre de la tarea es obligatorio\"}):null]});};export default FormTarea;","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/components/tareas/FormTarea.jsx"],"names":["useContext","useState","useEffect","ProyectoContext","TareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaSeleccionada","errorTarea","obtenerTareas","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","setTarea","nombre","tarea","proyectoActual","handleChange","e","target","name","value","onSubmit","preventDefault","trim","_id","id"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\nimport TareaContext from \"../../context/tareas/TareaContext\";\r\n\r\nconst FormTarea = () => {\r\n\r\n  // Extraer si un proyecto est치 activo\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const { proyecto } = proyectosContext;\r\n\r\n  // Obtener la funcion del context de tarea\r\n  const tareasContext = useContext( TareaContext );\r\n  const { tareaSeleccionada, errorTarea, obtenerTareas, agregarTarea, validarTarea, actualizarTarea, limpiarTarea } = tareasContext;\r\n\r\n  // Effect que detecta si hay una tarea seleccionada\r\n  useEffect( () => {\r\n\r\n    if ( tareaSeleccionada !== null ) {\r\n      setTarea( tareaSeleccionada );\r\n    } else {\r\n      setTarea( {\r\n        nombre: ''\r\n      } )\r\n    }\r\n\r\n  }, [ tareaSeleccionada ] )\r\n\r\n  // State del formulario\r\n  const [ tarea, setTarea ] = useState( {\r\n    nombre: ''\r\n  } )\r\n\r\n  // Extraer el nombre del proyecto\r\n  const { nombre } = tarea;\r\n\r\n  // Si no hay proyecto seleccionado\r\n  if ( !proyecto ) {\r\n    return null\r\n  }\r\n\r\n  // Array destructuring para extraer el proyecto actual\r\n  const [ proyectoActual ] = proyecto;\r\n\r\n  // Leer los valores del formulario\r\n  const handleChange = e => {\r\n    setTarea( {\r\n      ...tarea,\r\n      [ e.target.name ]: e.target.value\r\n    } )\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    if ( nombre.trim() === '' ) {\r\n      validarTarea();\r\n      return;\r\n    }\r\n\r\n    // Si es edici칩n o si es nueva tarea\r\n    if ( tareaSeleccionada === null ) {\r\n      // Agregar la tarea nueva al state de tareas, se iguala el id y se pasan las tareas en false\r\n      tarea.proyecto = proyectoActual._id;\r\n      agregarTarea( tarea );\r\n    } else {\r\n      // Actualizar tarea existente\r\n      actualizarTarea( tarea );\r\n\r\n      // Elimina tareaSeleccionara del state\r\n      limpiarTarea();\r\n\r\n    }\r\n\r\n    // Obtener y filtrar las tareas del proyecto actual\r\n    obtenerTareas( proyectoActual.id );\r\n\r\n    // Reiniciar el Form\r\n    setTarea( {\r\n      nombre: ''\r\n    } )\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"formulario\">\r\n      <form\r\n        onSubmit={ onSubmit }\r\n      >\r\n\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            id=\"\"\r\n            className=\"input-text\"\r\n            placeholder=\"Nombre Tarea...\"\r\n            value={ nombre }\r\n            onChange={ handleChange }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"submit\"\r\n            value={ tareaSeleccionada ? 'Editar Tarea' : 'Agregar Tarea' }\r\n            className=\"btn btn-primario btn-submit btn-block\"\r\n          />\r\n        </div>\r\n\r\n      </form>\r\n\r\n      { errorTarea ?\r\n        <p className=\"mensaje error\">\r\n          El nombre de la tarea es obligatorio\r\n        </p>\r\n        :\r\n        null\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}