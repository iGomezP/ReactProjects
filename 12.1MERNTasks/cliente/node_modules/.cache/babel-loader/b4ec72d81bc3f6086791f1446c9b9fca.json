{"ast":null,"code":"var _jsxFileName = \"/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/tareas/TareaState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareasProyecto: [],\n    errorTarea: false,\n    tareaSeleccionada: null\n  }; // Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); // Crear las funciones\n  // Obtener las tareas de un proyecto\n\n  const obtenerTareas = async proyecto => {\n    try {\n      // Cuando se usa params en el cliente, en el servidor debe usarse req.query en lugar de req.body\n      const resultado = await clienteAxios.get('/api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      console.log(resultado.data.tareas);\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar una tarea al proyecto seleccionado\n\n\n  const agregarTarea = async tarea => {\n    const resultado = await clienteAxios.post('/api/tareas', tarea);\n    console.log(resultado);\n\n    try {\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Valida y muestra un error en caso de que sea necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; // Eliminar tarea por id\n\n\n  const eliminarTarea = async (id, proyecto) => {\n    try {\n      await clienteAxios.delete(`/api/tareas/${id}`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Cambia el estado de cada tarea\n  // const cambiarEstadoTarea = tarea => {\n  //   dispatch( {\n  //     type: ESTADO_TAREA,\n  //     payload: tarea\n  //   } )\n  // }\n  // Edita o modifica una tarea\n\n\n  const actualizarTarea = tarea => {\n    console.log(tarea);\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  }; // Extrae la tarea para edición\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; // Elimina la tarea seleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      // ¿ States\n      tareasProyecto: state.tareasProyecto,\n      errorTarea: state.errorTarea,\n      tareaSeleccionada: state.tareaSeleccionada,\n      // ¿ Funciones\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      // cambiarEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TareaState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/tareas/TareaState.jsx"],"names":["useReducer","TareaContext","TareaReducer","clienteAxios","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareasProyecto","errorTarea","tareaSeleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","console","log","data","tareas","type","payload","error","agregarTarea","tarea","post","validarTarea","eliminarTarea","id","delete","actualizarTarea","guardarTareaActual","limpiarTarea","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport {\n  TAREAS_PROYECTO,\n  AGREGAR_TAREA,\n  VALIDAR_TAREA,\n  ELIMINAR_TAREA,\n  ESTADO_TAREA,\n  TAREA_ACTUAL,\n  ACTUALIZAR_TAREA,\n  LIMPIAR_TAREA\n\n} from \"../../types\";\n\nconst TareaState = props => {\n  const initialState = {\n    tareasProyecto: [],\n    errorTarea: false,\n    tareaSeleccionada: null\n  }\n\n  // Crear dispatch y state\n  const [ state, dispatch ] = useReducer( TareaReducer, initialState );\n\n  // Crear las funciones\n\n\n  // Obtener las tareas de un proyecto\n  const obtenerTareas = async proyecto => {\n\n    try {\n      // Cuando se usa params en el cliente, en el servidor debe usarse req.query en lugar de req.body\n      const resultado = await clienteAxios.get( '/api/tareas', { params: { proyecto } } );\n      console.log( resultado.data.tareas );\n\n      dispatch( {\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      } );\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Agregar una tarea al proyecto seleccionado\n  const agregarTarea = async tarea => {\n\n    const resultado = await clienteAxios.post( '/api/tareas', tarea );\n    console.log( resultado );\n\n    try {\n\n      dispatch( {\n        type: AGREGAR_TAREA,\n        payload: tarea\n      } );\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Valida y muestra un error en caso de que sea necesario\n  const validarTarea = () => {\n    dispatch( {\n      type: VALIDAR_TAREA\n    } )\n  }\n\n  // Eliminar tarea por id\n  const eliminarTarea = async ( id, proyecto ) => {\n\n    try {\n\n      await clienteAxios.delete( `/api/tareas/${ id }`, { params: { proyecto } } );\n\n      dispatch( {\n        type: ELIMINAR_TAREA,\n        payload: id\n      } )\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Cambia el estado de cada tarea\n  // const cambiarEstadoTarea = tarea => {\n  //   dispatch( {\n  //     type: ESTADO_TAREA,\n  //     payload: tarea\n  //   } )\n  // }\n\n  // Edita o modifica una tarea\n  const actualizarTarea = tarea => {\n    console.log( tarea );\n    dispatch( {\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    } )\n  }\n\n\n  // Extrae la tarea para edición\n  const guardarTareaActual = tarea => {\n    dispatch( {\n      type: TAREA_ACTUAL,\n      payload: tarea\n    } )\n  }\n\n\n  // Elimina la tarea seleccionada\n  const limpiarTarea = () => {\n    dispatch( {\n      type: LIMPIAR_TAREA\n    } )\n  }\n\n  return (\n    <TareaContext.Provider\n      value={ {\n\n        // ¿ States\n        tareasProyecto: state.tareasProyecto,\n        errorTarea: state.errorTarea,\n        tareaSeleccionada: state.tareaSeleccionada,\n\n        // ¿ Funciones\n        obtenerTareas,\n        agregarTarea,\n        validarTarea,\n        eliminarTarea,\n        // cambiarEstadoTarea,\n        guardarTareaActual,\n        actualizarTarea,\n        limpiarTarea\n\n      } }\n    >\n      { props.children }\n    </TareaContext.Provider>\n  )\n\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}