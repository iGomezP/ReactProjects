{"ast":null,"code":"var _jsxFileName = \"/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/proyectos/ProyectoState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport ProyectoContext from \"./ProyectoContext\";\nimport ProyectoReducer from \"./ProyectoReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO, PROYECTO_ERROR } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorFormulario: false,\n    proyecto: null,\n    mensaje: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(ProyectoReducer, initialState); // Serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; // Obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        // El payload es lo que toma la función como parámetro\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto); // console.log( resultado );\n      // Insertar el proyecto en el state\n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Valida el formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // Selecciona el proyecto al que el usuario dio click\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; // Elimina un proyecto\n\n\n  const eliminarProyecto = async proyectoId => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: proyectoId\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProyectoContext.Provider, {\n    value: {\n      // ¿ States\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorFormulario: state.errorFormulario,\n      proyecto: state.proyecto,\n      mensaje: state.mensaje,\n      // ¿ Funciones\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProyectoState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["/home/vakaz/Documentos/React/12MERNTasks/cliente/src/context/proyectos/ProyectoState.jsx"],"names":["useReducer","ProyectoContext","ProyectoReducer","clienteAxios","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","ProyectoState","props","initialState","proyectos","formulario","errorFormulario","proyecto","mensaje","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","console","log","agregarProyecto","post","alerta","msg","categoria","mostrarError","proyectoActual","proyectoId","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\nimport ProyectoContext from \"./ProyectoContext\";\r\nimport ProyectoReducer from \"./ProyectoReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR\r\n} from \"../../types\";\r\n\r\nconst ProyectoState = props => {\r\n\r\n  const initialState = {\r\n    proyectos: [],\r\n    formulario: false,\r\n    errorFormulario: false,\r\n    proyecto: null,\r\n    mensaje: null\r\n  }\r\n\r\n  // Dispatch para ejecutar las acciones\r\n  const [ state, dispatch ] = useReducer( ProyectoReducer, initialState );\r\n\r\n  // Serie de funciones para el CRUD\r\n\r\n  const mostrarFormulario = () => {\r\n    dispatch( {\r\n      type: FORMULARIO_PROYECTO\r\n    } );\r\n  }\r\n\r\n  // Obtener los proyectos\r\n  const obtenerProyectos = async () => {\r\n\r\n    try {\r\n\r\n      const resultado = await clienteAxios.get( '/api/proyectos' );\r\n\r\n      dispatch( {\r\n        type: OBTENER_PROYECTOS,\r\n        // El payload es lo que toma la función como parámetro\r\n        payload: resultado.data.proyectos\r\n      } );\r\n\r\n    } catch ( error ) {\r\n      console.log( error );\r\n    }\r\n\r\n  };\r\n\r\n  // Agregar nuevo proyecto\r\n  const agregarProyecto = async proyecto => {\r\n\r\n    try {\r\n\r\n      const resultado = await clienteAxios.post( '/api/proyectos', proyecto );\r\n      // console.log( resultado );\r\n\r\n      // Insertar el proyecto en el state\r\n      dispatch( {\r\n        type: AGREGAR_PROYECTO,\r\n        payload: resultado.data\r\n      } )\r\n\r\n    } catch ( error ) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n\r\n      dispatch( {\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta\r\n      } );\r\n    }\r\n\r\n  };\r\n\r\n  // Valida el formulario por errores\r\n  const mostrarError = () => {\r\n    dispatch( {\r\n      type: VALIDAR_FORMULARIO\r\n    } )\r\n  };\r\n\r\n  // Selecciona el proyecto al que el usuario dio click\r\n  const proyectoActual = proyectoId => {\r\n    dispatch( {\r\n      type: PROYECTO_ACTUAL,\r\n      payload: proyectoId\r\n    } )\r\n  };\r\n\r\n  // Elimina un proyecto\r\n  const eliminarProyecto = async proyectoId => {\r\n\r\n    try {\r\n\r\n      await clienteAxios.delete( `/api/proyectos/${ proyectoId }` );\r\n\r\n      dispatch( {\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoId\r\n      } );\r\n\r\n    } catch ( error ) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n\r\n      dispatch( {\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta\r\n      } )\r\n\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <ProyectoContext.Provider\r\n      value={ {\r\n        // ¿ States\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        errorFormulario: state.errorFormulario,\r\n        proyecto: state.proyecto,\r\n        mensaje: state.mensaje,\r\n        // ¿ Funciones\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto\r\n      } }\r\n    >\r\n      { props.children }\r\n    </ProyectoContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}