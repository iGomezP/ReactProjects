{"version":3,"sources":["context/proyectos/ProyectoContext.jsx","types/index.jsx","context/proyectos/ProyectoReducer.jsx","config/axios.js","context/proyectos/ProyectoState.jsx","context/tareas/TareaContext.jsx","context/tareas/TareaReducer.jsx","context/tareas/TareaState.jsx","context/alertas/AlertaReducer.jsx","context/alertas/AlertaContext.jsx","context/alertas/AlertaState.jsx","context/autenticacion/AuthContext.jsx","context/autenticacion/AuthReducer.jsx","config/tokenAuth.jsx","context/autenticacion/AuthState.jsx","components/auth/Login.jsx","components/auth/NuevaCuenta.jsx","components/proyectos/NuevoProyecto.jsx","components/proyectos/Proyecto.jsx","components/proyectos/ListadoProyectos.jsx","components/layout/Sidebar.jsx","components/layout/Barra.jsx","components/tareas/FormTarea.jsx","components/tareas/Tarea.jsx","components/tareas/ListadoTareas.jsx","components/proyectos/Proyectos.jsx","components/rutas/RutaPrivada.jsx","App.js","index.js"],"names":["ProyectoContext","createContext","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","type","formulario","proyectos","payload","errorFormulario","proyecto","filter","_id","mensaje","clienteAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","ProyectoState","props","useReducer","ProyectoReducer","dispatch","obtenerProyectos","a","get","resultado","data","msg","categoria","agregarProyecto","post","eliminarProyecto","proyectoId","delete","Provider","value","mostrarFormulario","mostrarError","proyectoActual","children","TareaContext","tareasProyecto","errorTarea","tarea","map","tareaSeleccionada","TareaState","TareaReducer","obtenerTareas","params","tareas","console","log","agregarTarea","error","eliminarTarea","id","actualizarTarea","put","tareaExiste","validarTarea","guardarTareaActual","limpiarTarea","alerta","AlertaContext","AlertaState","AlertaReducer","MostrarAlerta","setTimeout","AuthContext","localStorage","setItem","token","autenticado","cargando","usuario","removeItem","TokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","RegistrarUsuario","datos","respuesta","UsuarioAutenticado","response","IniciarSesion","CerrarSesion","Login","alertaContext","useContext","authContext","useEffect","history","push","useState","email","password","setUsuario","onChange","e","target","name","className","onSubmit","preventDefault","trim","htmlFor","placeholder","to","NuevaCuenta","nombre","confirmar","length","NuevoProyecto","proyectosContext","setProyecto","onClick","Proyecto","ListadoProyectos","TransitionGroup","CSSTransition","timeout","classNames","Sidebar","Barra","FormTarea","tareasContext","setTarea","Tarea","cambiarEstado","estado","seleccionarTarea","ListadoTareas","Proyectos","RutaPrivada","Component","component","render","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"0NAIeA,EAFSC,0B,eCAXC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAiB,iBAGjBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBAEjBC,EAAe,eACfC,EAAmB,mBACnBC,EAAgB,gBAGhBC,EAAiB,iBACjBC,EAAiB,iBAGjBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAc,cACdC,EAAgB,gBChBd,WAAEC,EAAOC,GACtB,OAASA,EAAOC,MACd,KAAKxB,EACH,OAAO,2BACFsB,GADL,IAEEG,YAAY,IAGhB,KAAKxB,EAEH,OAAO,2BACFqB,GADL,IAEEI,UAAWH,EAAOI,UAGtB,KAAKzB,EACH,OAAO,2BACFoB,GADL,IAEEI,UAAU,GAAD,mBAAOJ,EAAMI,WAAb,CAAwBH,EAAOI,UACxCF,YAAY,EACZG,iBAAiB,IAGrB,KAAKzB,EACH,OAAO,2BACFmB,GADL,IAEEM,iBAAiB,IAGrB,KAAKxB,EACH,OAAO,2BACFkB,GADL,IAGEO,SAAUP,EAAMI,UAAUI,QAAQ,SAAAD,GAAQ,OAAIA,EAASE,MAAQR,EAAOI,aAE1E,KAAKtB,EACH,OAAO,2BACFiB,GADL,IAEEI,UAAWJ,EAAMI,UAAUI,QAAQ,SAAAD,GAAQ,OAAIA,EAASE,MAAQR,EAAOI,WACvEE,SAAU,OAGd,KAAKvB,EACH,OAAO,2BACFgB,GADL,IAEEU,QAAST,EAAOI,UAGpB,QACE,OAAOL,I,QCzDEW,E,OAJMC,EAAMC,OAAQ,CACjCC,QAASC,mIAAYC,wB,OCwJRC,EA7IO,SAAAC,GAEpB,IASA,EAA4BC,qBAAYC,EATnB,CACnBhB,UAAW,GACXD,YAAY,EACZG,iBAAiB,EACjBC,SAAU,KACVG,QAAS,OAIX,mBAAQV,EAAR,KAAeqB,EAAf,KAWMC,EAAgB,uCAAG,4BAAAC,EAAA,+EAIGZ,EAAaa,IAAK,kBAJrB,OAIfC,EAJe,OAMrBJ,EAAU,CACRnB,KAAMvB,EAEN0B,QAASoB,EAAUC,KAAKtB,YATL,gDAkBrBiB,EAAU,CACRnB,KAAMlB,EACNqB,QAPa,CACbsB,IAAK,gBACLC,UAAW,kBAfQ,yDAAH,qDA2BhBC,EAAe,uCAAG,WAAMtB,GAAN,eAAAgB,EAAA,+EAIIZ,EAAamB,KAAM,iBAAkBvB,GAJzC,OAIdkB,EAJc,OAQpBJ,EAAU,CACRnB,KAAMtB,EACNyB,QAASoB,EAAUC,OAVD,gDAmBpBL,EAAU,CACRnB,KAAMlB,EACNqB,QAPa,CACbsB,IAAK,gBACLC,UAAW,kBAhBO,yDAAH,sDA2CfG,EAAgB,uCAAG,WAAMC,GAAN,SAAAT,EAAA,+EAIfZ,EAAasB,OAAb,yBAAwCD,IAJzB,OAMrBX,EAAU,CACRnB,KAAMnB,EACNsB,QAAS2B,IARU,gDAiBrBX,EAAU,CACRnB,KAAMlB,EACNqB,QAPa,CACbsB,IAAK,gBACLC,UAAW,kBAdQ,yDAAH,sDA0BtB,OACE,cAAC,EAAgBM,SAAjB,CACEC,MAAQ,CAEN/B,UAAWJ,EAAMI,UACjBD,WAAYH,EAAMG,WAClBG,gBAAiBN,EAAMM,gBACvBC,SAAUP,EAAMO,SAChBG,QAASV,EAAMU,QAEf0B,kBAjHoB,WACxBf,EAAU,CACRnB,KAAMxB,KAgHJ4C,mBACAO,kBACAQ,aAtDe,WACnBhB,EAAU,CACRnB,KAAMrB,KAqDJyD,eAhDiB,SAAAN,GACrBX,EAAU,CACRnB,KAAMpB,EACNuB,QAAS2B,KA8CPD,oBAdJ,SAiBIb,EAAMqB,YClJCC,EAFM/D,0BCYN,WAAEuB,EAAOC,GACtB,OAASA,EAAOC,MAEd,KAAKjB,EACH,OAAO,2BACFe,GADL,IAIEyC,eAAgBxC,EAAOI,UAG3B,KAAKnB,EACH,OAAO,2BACFc,GADL,IAEEyC,eAAe,CAAGxC,EAAOI,SAAX,mBAAuBL,EAAMyC,iBAC3CC,YAAY,IAGhB,KAAKvD,EACH,OAAO,2BACFa,GADL,IAEE0C,YAAY,IAGhB,KAAKtD,EACH,OAAO,2BACFY,GADL,IAEEyC,eAAgBzC,EAAMyC,eAAejC,QAAQ,SAAAmC,GAAK,OAAIA,EAAMlC,MAAQR,EAAOI,aAG/E,KAAKf,EAEH,OAAO,2BACFU,GADL,IAEEyC,eAAgBzC,EAAMyC,eAAeG,KAAK,SAAAD,GAAK,OAAIA,EAAMlC,MAAQR,EAAOI,QAAQI,IAAMR,EAAOI,QAAUsC,OAG3G,KAAKtD,EACH,OAAO,2BACFW,GADL,IAEE6C,kBAAmB5C,EAAOI,UAG9B,KAAKd,EACH,OAAO,2BACFS,GADL,IAEE6C,kBAAmB,OAGvB,QACE,OAAO7C,ICmGE8C,EAnJI,SAAA5B,GACjB,IAOA,EAA4BC,qBAAY4B,EAPnB,CACnBN,eAAgB,GAChBC,YAAY,EACZG,kBAAmB,OAIrB,mBAAQ7C,EAAR,KAAeqB,EAAf,KAMM2B,EAAa,uCAAG,WAAMzC,GAAN,eAAAgB,EAAA,+EAIMZ,EAAaa,IAAK,cAAe,CAAEyB,OAAQ,CAAE1C,cAJnD,OAIZkB,EAJY,OAOlBJ,EAAU,CACRnB,KAAMjB,EACNoB,QAASoB,EAAUC,KAAKwB,SATR,gDAalBC,QAAQC,IAAR,MAbkB,yDAAH,sDAmBbC,EAAY,uCAAG,WAAMV,GAAN,eAAApB,EAAA,sEAEKZ,EAAamB,KAAM,cAAea,GAFvC,OAEblB,EAFa,OAGnB0B,QAAQC,IAAK3B,GAEb,IAEEJ,EAAU,CACRnB,KAAMhB,EACNmB,QAASsC,IAGX,MAAQW,GACRH,QAAQC,IAAKE,GAbI,2CAAH,sDA0BZC,EAAa,uCAAG,WAAQC,EAAIjD,GAAZ,SAAAgB,EAAA,+EAIZZ,EAAasB,OAAb,sBAAqCuB,GAAO,CAAEP,OAAQ,CAAE1C,cAJ5C,OAMlBc,EAAU,CACRnB,KAAMd,EACNiB,QAASmD,IARO,+CAYlBL,QAAQC,IAAR,MAZkB,wDAAH,wDA0BbK,EAAe,uCAAG,WAAMd,GAAN,eAAApB,EAAA,+EAIIZ,EAAa+C,IAAb,sBAAkCf,EAAMlC,KAAQkC,GAJpD,OAIdlB,EAJc,OAOpBJ,EAAU,CACRnB,KAAMZ,EACNe,QAASoB,EAAUC,KAAKiC,cATN,gDAapBR,QAAQC,IAAR,MAboB,yDAAH,sDAmCrB,OACE,cAAC,EAAalB,SAAd,CACEC,MAAQ,CAGNM,eAAgBzC,EAAMyC,eACtBC,WAAY1C,EAAM0C,WAClBG,kBAAmB7C,EAAM6C,kBAGzBG,gBACAK,eACAO,aAhFe,WACnBvC,EAAU,CACRnB,KAAMf,KA+EJoE,gBAEAM,mBA9BqB,SAAAlB,GACzBtB,EAAU,CACRnB,KAAMb,EACNgB,QAASsC,KA4BPc,kBACAK,aAvBe,WACnBzC,EAAU,CACRnB,KAAMX,MAKR,SAoBI2B,EAAMqB,YCtJC,WAAEvC,EAAOC,GACtB,OAASA,EAAOC,MAEd,KAAKV,EACH,MAAO,CACLuE,OAAQ9D,EAAOI,SAGnB,KAAKZ,EACH,MAAO,CACLsE,OAAQ,MAGZ,QACE,OAAO/D,ICjBEgE,EAFOvF,0BCiDPwF,EA3CK,SAAA/C,GAGlB,IAIA,EAA4BC,qBAAY+C,EAJnB,CACnBH,OAAQ,OAGV,mBAAQ/D,EAAR,KAAeqB,EAAf,KAqBA,OACE,cAAC,EAAca,SAAf,CACEC,MAAQ,CAEN4B,OAAQ/D,EAAM+D,OAEdI,cAxBgB,SAAExC,EAAKC,GAC3BP,EAAU,CACRnB,KAAMV,EACNa,QAAS,CACPsB,MACAC,eAKJwC,YAAY,WACV/C,EAAU,CACRnB,KAAMT,MAEP,OAKH,SAQIyB,EAAMqB,YCzCC8B,EAFK5F,0BCQL,WAAEuB,EAAOC,GACtB,OAASA,EAAOC,MAEd,KAAKL,EACL,KAAKH,EAEH,OADA4E,aAAaC,QAAS,QAAStE,EAAOI,QAAQmE,OACvC,2BACFxE,GADL,IAEEyE,aAAa,EACb/D,QAAS,KACTgE,UAAU,IAId,KAAK9E,EACH,OAAO,2BACFI,GADL,IAEEyE,aAAa,EACbE,QAAS1E,EAAOI,QAChBqE,UAAU,IAGd,KAAK3E,EACL,KAAKD,EACL,KAAKH,EAEH,OADA2E,aAAaM,WAAY,SAClB,2BACF5E,GADL,IAEEwE,MAAO,KACPG,QAAS,KACTF,YAAa,KACb/D,QAAST,EAAOI,QAChBqE,UAAU,IAId,QACE,OAAO1E,ICjCE6E,EAZG,SAAAL,GACXA,EAEH7D,EAAamE,SAASC,QAAQC,OAAQ,gBAAmBR,SAIlD7D,EAAamE,SAASC,QAAQC,OAAQ,iBCoIlCC,EA/HG,SAAA/D,GAGhB,IAAMgE,EAAe,CACnBV,MAAOF,aAAaa,QAAS,SAC7BV,YAAa,KACbE,QAAS,KACTjE,QAAS,KACTgE,UAAU,GAIZ,EAA4BvD,qBAAYiE,EAAaF,GAArD,mBAAQlF,EAAR,KAAeqB,EAAf,KAGMgE,EAAgB,uCAAG,WAAMC,GAAN,iBAAA/D,EAAA,+EAIGZ,EAAamB,KAAM,gBAAiBwD,GAJvC,OAIfC,EAJe,OAOrBlE,EAAU,CACRnB,KAAMR,EACNW,QAASkF,EAAU7D,OAIrB8D,IAbqB,gDAiBfzB,EAAS,CACbpC,IAAK,KAAM8D,SAAS/D,KAAKC,IACzBC,UAAW,gBAGbP,EAAU,CACRnB,KAAMP,EACNU,QAAS0D,IAxBU,yDAAH,sDA8BhB2B,EAAa,uCAAG,WAAMJ,GAAN,iBAAA/D,EAAA,+EAIMZ,EAAamB,KAAM,YAAawD,GAJtC,OAIZC,EAJY,OAMlBlE,EAAU,CACRnB,KAAML,EACNQ,QAASkF,EAAU7D,OAIrB8D,IAZkB,gDAelBrC,QAAQC,IAAK,KAAMqC,SAAS/D,KAAKC,KAC3BoC,EAAS,CACbpC,IAAK,KAAM8D,SAAS/D,KAAKC,IACzBC,UAAW,gBAGbP,EAAU,CACRnB,KAAMJ,EACNO,QAAS0D,IAvBO,yDAAH,sDA6BbyB,EAAkB,uCAAG,8BAAAjE,EAAA,6DACnBiD,EAAQF,aAAaa,QAAS,WAGlCN,EAAWL,GAJY,kBASC7D,EAAaa,IAAK,aATnB,OASjB+D,EATiB,OAYvBlE,EAAU,CACRnB,KAAMN,EACNS,QAASkF,EAAU7D,KAAKiD,UAdH,gDAkBvBxB,QAAQC,IAAK,KAAMqC,UACnBpE,EAAU,CACRnB,KAAMJ,IApBe,yDAAH,qDAgCxB,OACE,cAAC,EAAYoC,SAAb,CACEC,MAAQ,CAENqC,MAAOxE,EAAMwE,MACbC,YAAazE,EAAMyE,YACnBE,QAAS3E,EAAM2E,QACfjE,QAASV,EAAMU,QACfgE,SAAU1E,EAAM0E,SAEhBW,mBACAK,gBACAF,qBACAG,aAnBe,WACnBtE,EAAU,CACRnB,KAAMH,MAKR,SAeImB,EAAMqB,Y,QCbCqD,GArHD,SAAE1E,GAGd,IAAM2E,EAAgBC,qBAAY9B,GAC1BD,EAA0B8B,EAA1B9B,OAAQI,EAAkB0B,EAAlB1B,cAGV4B,EAAcD,qBAAYzB,GACxB3D,EAAwCqF,EAAxCrF,QAAS+D,EAA+BsB,EAA/BtB,YAAaiB,EAAkBK,EAAlBL,cAG9BM,qBAAW,WAEJvB,GACHvD,EAAM+E,QAAQC,KAAM,cAGjBxF,GACHyD,EAAezD,EAAQiB,IAAK,kBAK7B,CAAEjB,EAAS+D,EAAavD,EAAM+E,UAGjC,MAAgCE,mBAAU,CACxCC,MAAO,GACPC,SAAU,KAFZ,mBAAQ1B,EAAR,KAAiB2B,EAAjB,KAMQF,EAAoBzB,EAApByB,MAAOC,EAAa1B,EAAb0B,SAETE,EAAW,SAAAC,GACfF,EAAW,2BACN3B,GADK,kBAEN6B,EAAEC,OAAOC,KAAQF,EAAEC,OAAOtE,UAqBhC,OACE,sBAAKwE,UAAU,eAAf,UAEI5C,EACE,qBAAK4C,UAAS,iBAAc5C,EAAOnC,WAAnC,SACImC,EAAOpC,MAGX,KAEJ,sBAAKgF,UAAU,8BAAf,UACE,mDAEA,uBACEC,SA7BS,SAAAJ,GACfA,EAAEK,iBAGoB,KAAjBT,EAAMU,QACW,KAApBT,EAASS,OAMXpB,EAAe,CAAEU,QAAOC,aALtBlC,EAAe,oCAAqC,iBAsBlD,UAGE,sBAAKwC,UAAU,aAAf,UACE,uBAAOI,QAAQ,QAAf,mBACA,uBACE7G,KAAK,QACLsD,GAAG,QACHkD,KAAK,QACLM,YAAY,WACZ7E,MAAQiE,EACRG,SAAWA,OAIf,sBAAKI,UAAU,aAAf,UACE,uBAAOI,QAAQ,WAAf,sBACA,uBACE7G,KAAK,WACLsD,GAAG,WACHkD,KAAK,WACLM,YAAY,cACZ7E,MAAQkE,EACRE,SAAWA,OAIf,qBAAKI,UAAU,aAAf,SACE,uBACEzG,KAAK,SACLiC,MAAM,oBACNwE,UAAU,oCAMhB,cAAC,IAAD,CAAMM,GAAK,gBAAkBN,UAAU,gBAAvC,uCCkDOO,GA/JK,SAAEhG,GAGpB,IAAM2E,EAAgBC,qBAAY9B,GAC1BD,EAA0B8B,EAA1B9B,OAAQI,EAAkB0B,EAAlB1B,cAGV4B,EAAcD,qBAAYzB,GACxB3D,EAA2CqF,EAA3CrF,QAAS+D,EAAkCsB,EAAlCtB,YAAaY,EAAqBU,EAArBV,iBAG9BW,qBAAW,WAEJvB,GACHvD,EAAM+E,QAAQC,KAAM,cAGjBxF,GACHyD,EAAezD,EAAQiB,IAAK,kBAK7B,CAAEjB,EAAS+D,EAAavD,EAAM+E,UAGjC,MAAgCE,mBAAU,CACxCgB,OAAQ,GACRf,MAAO,GACPC,SAAU,GACVe,UAAW,KAJb,mBAAQzC,EAAR,KAAiB2B,EAAjB,KAQQa,EAAuCxC,EAAvCwC,OAAQf,EAA+BzB,EAA/ByB,MAAOC,EAAwB1B,EAAxB0B,SAAUe,EAAczC,EAAdyC,UAE3Bb,EAAW,SAAAC,GACfF,EAAW,2BACN3B,GADK,kBAEN6B,EAAEC,OAAOC,KAAQF,EAAEC,OAAOtE,UAoChC,OACE,sBAAKwE,UAAU,eAAf,UAEI5C,EACE,qBAAK4C,UAAS,iBAAc5C,EAAOnC,WAAnC,SACImC,EAAOpC,MAGX,KAEJ,sBAAKgF,UAAU,8BAAf,UACE,oDAEA,uBACEC,SA5CS,SAAAJ,GACfA,EAAEK,iBAGqB,KAAlBM,EAAOL,QACO,KAAjBV,EAAMU,QACc,KAApBT,EAASS,QACY,KAArBM,EAAUN,OAMPT,EAASgB,OAAS,EACrBlD,EAAe,mDAAoD,gBAKhEkC,IAAae,EAMlB/B,EAAkB,CAChB8B,SAAQf,QAAOC,aANflC,EAAe,+BAAgC,gBAZ/CA,EAAe,oCAAqC,iBAmClD,UAIE,sBAAKwC,UAAU,aAAf,UACE,uBAAOI,QAAQ,SAAf,oBACA,uBACE7G,KAAK,OACLsD,GAAG,SACHkD,KAAK,SACLM,YAAY,YACZ7E,MAAQgF,EACRZ,SAAWA,OAIf,sBAAKI,UAAU,aAAf,UACE,uBAAOI,QAAQ,QAAf,mBACA,uBACE7G,KAAK,QACLsD,GAAG,QACHkD,KAAK,QACLM,YAAY,WACZ7E,MAAQiE,EACRG,SAAWA,OAIf,sBAAKI,UAAU,aAAf,UACE,uBAAOI,QAAQ,WAAf,sBACA,uBACE7G,KAAK,WACLsD,GAAG,WACHkD,KAAK,WACLM,YAAY,kCACZ7E,MAAQkE,EACRE,SAAWA,OAIf,sBAAKI,UAAU,aAAf,UACE,uBAAOI,QAAQ,YAAf,8BACA,uBACE7G,KAAK,WACLsD,GAAG,YACHkD,KAAK,YACLM,YAAY,qBACZ7E,MAAQiF,EACRb,SAAWA,OAIf,qBAAKI,UAAU,aAAf,SACE,uBACEzG,KAAK,SACLiC,MAAM,cACNwE,UAAU,oCAMhB,cAAC,IAAD,CAAMM,GAAK,IAAMN,UAAU,gBAA3B,+CCvCOW,GAjHO,WAGpB,IAAMC,EAAmBzB,qBAAYtH,GAGnC2B,EAMEoH,EANFpH,WACAG,EAKEiH,EALFjH,gBAEA8B,EAGEmF,EAHFnF,kBACAP,EAEE0F,EAFF1F,gBACAQ,EACEkF,EADFlF,aAIF,EAAkC8D,mBAAU,CAC1CgB,OAAQ,KADV,mBAAQ5G,EAAR,KAAkBiH,EAAlB,KAcQL,EAAW5G,EAAX4G,OA8BR,OACE,eAAC,WAAD,WAEE,wBACEjH,KAAK,SACLyG,UAAU,6BACVc,QAXoB,WACxBrF,KAOE,4BAUEjC,EACI,uBACAwG,UAAU,4BACVC,SA3Ce,SAAAJ,GACvBA,EAAEK,iBAGc,KAAXM,GAOLtF,EAAiBtB,GAIjBiH,EAAa,CACXL,OAAQ,MAXR9E,KAoCM,UAIA,uBACEnC,KAAK,OACLwG,KAAK,SACLlD,GAAG,GACHmD,UAAU,aACVK,YAAY,sBACZT,SA9Da,SAAAC,GACvBgB,EAAY,2BACPjH,GADM,kBAEPiG,EAAEC,OAAOC,KAAQF,EAAEC,OAAOtE,UA4DpBA,MAAQgF,IAIV,uBACEjH,KAAK,SACLiC,MAAM,mBACNwE,UAAU,kCAKd,KAKFrG,EACE,mBAAGqG,UAAU,gBAAb,mDAIA,SC5EKe,GA7BE,SAAC,GAAoB,IAAjBnH,EAAgB,EAAhBA,SAIX+B,EADiBwD,qBAAYtH,GAC7B8D,eAIAU,EADc8C,qBAAYtD,GAC1BQ,cAQR,OACE,6BACE,wBACE9C,KAAK,SACLyG,UAAU,gBACVc,QAAU,kBAVYjE,EAUejD,EAASE,IATlD6B,EAAgBkB,QAChBR,EAAeQ,GAFW,IAAAA,GAOxB,SAKIjD,EAAS4G,Y,kBCqCJQ,GA1DU,WAGvB,IAAMJ,EAAmBzB,qBAAYtH,GAC7BkC,EAAyC6G,EAAzC7G,QAASN,EAAgCmH,EAAhCnH,UAAWkB,EAAqBiG,EAArBjG,iBAEtBuE,EAAgBC,qBAAY9B,GAC1BD,EAA0B8B,EAA1B9B,OAAQI,EAAkB0B,EAAlB1B,cAehB,OAZA6B,qBAAW,WAGJtF,GACHyD,EAAezD,EAAQiB,IAAKjB,EAAQkB,WAGtCN,MAEC,CAAEZ,IAGqB,IAArBN,EAAUiH,OACN,6EAIP,qBAAIV,UAAU,oBAAd,UAEI5C,EAEE,qBACE4C,UAAS,iBAAc5C,EAAOnC,WADhC,SAGImC,EAAOpC,MAIb,KAGF,cAACiG,GAAA,EAAD,UACIxH,EAAUwC,KAAK,SAAArC,GAAQ,OACvB,cAACsH,GAAA,EAAD,CAEEC,QAAU,IACVC,WAAW,WAHb,SAKE,cAAC,GAAD,CACExH,SAAWA,KALPA,EAASE,cC7BZuH,GAlBC,WACd,OACE,kCACE,uCAAS,4CAET,cAAC,GAAD,IAEA,sBAAKrB,UAAU,YAAf,UACE,+CAEA,cAAC,GAAD,WCwBOsB,GAlCD,WAGZ,IAAMlC,EAAcD,qBAAYzB,GACxBM,EAA8CoB,EAA9CpB,QAASa,EAAqCO,EAArCP,mBAAoBG,EAAiBI,EAAjBJ,aAQrC,OANAK,qBAAW,WACTR,MAGC,IAGD,yBAAQmB,UAAU,aAAlB,UAEIhC,EACE,oBAAGgC,UAAU,iBAAb,kBACO,+BAAQhC,EAAQwC,YAGvB,KAEJ,qBAAKR,UAAU,gBAAf,SACE,wBACEA,UAAU,2CACVc,QAAU,kBAAM9B,KAFlB,oCCkGOuC,GAxHG,WAGhB,IACQ3H,EADiBuF,qBAAYtH,GAC7B+B,SAGF4H,EAAgBrC,qBAAYtD,GAC1BK,EAA4GsF,EAA5GtF,kBAAmBH,EAAyFyF,EAAzFzF,WAAYM,EAA6EmF,EAA7EnF,cAAeK,EAA8D8E,EAA9D9E,aAAcO,EAAgDuE,EAAhDvE,aAAcH,EAAkC0E,EAAlC1E,gBAAiBK,EAAiBqE,EAAjBrE,aAGnGkC,qBAAW,WAGPoC,EADyB,OAAtBvF,EACOA,EAEA,CACRsE,OAAQ,OAIX,CAAEtE,IAGL,MAA4BsD,mBAAU,CACpCgB,OAAQ,KADV,mBAAQxE,EAAR,KAAeyF,EAAf,KAKQjB,EAAWxE,EAAXwE,OAGR,IAAM5G,EACJ,OAAO,KAIT,IAAQ+B,EAAR,YAA2B/B,EAA3B,MA2CA,OACE,sBAAKoG,UAAU,aAAf,UACE,uBACEC,SApCW,SAAAJ,GACfA,EAAEK,iBAGqB,KAAlBM,EAAOL,QAMe,OAAtBjE,GAEHF,EAAMpC,SAAW+B,EAAe7B,IAChC4C,EAAcV,KAGdc,EAAiBd,GAGjBmB,KAKFd,EAAeV,EAAekB,IAG9B4E,EAAU,CACRjB,OAAQ,MAvBRvD,KA8BA,UAIE,qBAAK+C,UAAU,mBAAf,SACE,uBACEzG,KAAK,OACLwG,KAAK,SACLlD,GAAG,GACHmD,UAAU,aACVK,YAAY,kBACZ7E,MAAQgF,EACRZ,SAtDW,SAAAC,GACnB4B,EAAS,2BACJzF,GADG,kBAEJ6D,EAAEC,OAAOC,KAAQF,EAAEC,OAAOtE,cAuD1B,qBAAKwE,UAAU,mBAAf,SACE,uBACEzG,KAAK,SACLiC,MAAQU,EAAoB,eAAiB,gBAC7C8D,UAAU,+CAMdjE,EACA,mBAAGiE,UAAU,gBAAb,kDAIA,SCrBO0B,GA5FD,SAAC,GAAiB,IAAd1F,EAAa,EAAbA,MAIRpC,EADiBuF,qBAAYtH,GAC7B+B,SAGF4H,EAAgBrC,qBAAYtD,GAC1Be,EAAsE4E,EAAtE5E,cAAeP,EAAuDmF,EAAvDnF,cAAeS,EAAwC0E,EAAxC1E,gBAAiBI,EAAuBsE,EAAvBtE,mBAG/CvB,EAAR,YAA2B/B,EAA3B,MAUM+H,EAAgB,SAAA3F,GACfA,EAAM4F,OACT5F,EAAM4F,QAAS,EAEf5F,EAAM4F,QAAS,EAGjB9E,EAAiBd,IAUnB,OAEE,qBAAIgE,UAAU,eAAd,UAEE,4BAAKhE,EAAMwE,SAEX,qBAAKR,UAAU,SAAf,SACIhE,EAAM4F,OAEJ,wBACErI,KAAK,SACLyG,UAAU,WACVc,QAAU,kBAAMa,EAAe3F,IAHjC,sBASF,wBACEzC,KAAK,SACLyG,UAAU,aACVc,QAAU,kBAAMa,EAAe3F,IAHjC,0BAUJ,sBAAKgE,UAAU,WAAf,UAEE,wBACEzG,KAAK,SACLyG,UAAU,mBACVc,QAAU,kBAtCO,SAAA9E,GACvBkB,EAAoBlB,GAqCE6F,CAAkB7F,IAHpC,oBAQA,wBACEzC,KAAK,SACLyG,UAAU,qBACVc,QAAU,kBAjEIjE,EAiEiBb,EAAMlC,IAhE3C8C,EAAeC,EAAIlB,EAAe7B,UAClCuC,EAAeV,EAAekB,IAFV,IAAAA,GA8DhB,6BCNOiF,GAnEO,WAGpB,IAAMlB,EAAmBzB,qBAAYtH,GAC7B+B,EAA+BgH,EAA/BhH,SAAUwB,EAAqBwF,EAArBxF,iBAIVU,EADcqD,qBAAYtD,GAC1BC,eAGR,IAAMlC,EACJ,OAAO,wDAIT,IAAQ+B,EAAR,YAA2B/B,EAA3B,MAQA,OACE,eAAC,WAAD,WAEE,4CAAgB+B,EAAe6E,UAE/B,oBAAIR,UAAU,iBAAd,SAE8B,IAA1BlE,EAAe4E,OAEf,oBAAIV,UAAU,QAAd,SACE,gDAIF,cAACiB,GAAA,EAAD,UACInF,EAAeG,KAAK,SAAAD,GAAK,OACzB,cAACkF,GAAA,EAAD,CAEEC,QAAU,IACVC,WAAW,QAHb,SAKE,cAAC,GAAD,CACEpF,MAAQA,KALJA,EAAMa,WActB,wBACEtD,KAAK,SACLyG,UAAU,mBACVc,QAvCkB,WACtB1F,EAAkBO,EAAe7B,MAmC/B,wCChBSiI,GAvCG,WAGhB,IACQlD,EADYM,qBAAYzB,GACxBmB,mBAQR,OANAQ,qBAAW,WACTR,MAGC,IAGD,sBAAKmB,UAAU,iBAAf,UAEE,cAAC,GAAD,IAEA,sBAAKA,UAAU,oBAAf,UAEE,cAAC,GAAD,IAEA,iCAEE,cAAC,GAAD,IAEA,qBAAKA,UAAU,oBAAf,SAEE,cAAC,GAAD,gB,0BCCGgC,GAzBK,SAAC,GAA0C,IAA5BC,EAA2B,EAAtCC,UAAyB3H,EAAa,mBAEtD6E,EAAcD,qBAAYzB,GACxBI,EAA8CsB,EAA9CtB,YAAaC,EAAiCqB,EAAjCrB,SAAUc,EAAuBO,EAAvBP,mBAO/B,OALAQ,qBAAW,WACTR,MAEC,IAGD,cAAC,IAAD,2BACOtE,GADP,IAEE4H,OAAS,SAAA5H,GAAK,OAAKuD,GAAgBC,EAM/B,cAACkE,EAAD,eAAgB1H,IAJhB,cAAC,IAAD,CAAU+F,GAAG,WCNjBzC,GAAQF,aAAaa,QAAS,SAC/BX,IACHK,EAAWL,IA0BEuE,OAtBf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIJ,UAAYjD,KAClC,cAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,gBAAgBJ,UAAY3B,KAG9C,cAAC,GAAD,CAAa8B,OAAK,EAACC,KAAK,aAAaJ,UAAYH,mBChCjEQ,IAASJ,OACP,cAAC,IAAMK,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAgB,W","file":"static/js/main.c2bf175e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ProyectoContext = createContext();\r\n\r\nexport default ProyectoContext;\r\n\r\n","// Types (llevan consigo información que se usa en el reducer para ejecutar una acción)\r\n// ¬ Proyectos\r\nexport const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = \"AGREGAR_PROYECTO\";\r\nexport const VALIDAR_FORMULARIO = \"VALIDAR_FORMULARIO\";\r\nexport const PROYECTO_ACTUAL = \"PROYECTO_ACTUAL\";\r\nexport const ELIMINAR_PROYECTO = \"ELIMINAR_PROYECTO\";\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\n// ¬ Tareas\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\n// export const ESTADO_TAREA = 'ESTADO_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\n// ¬ Alertas\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\n// ¬ Usuario\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';","/* eslint-disable import/no-anonymous-default-export */\r\n\r\n// ° Siempre se retorna una copia del state -> ...state\r\n\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR\r\n} from \"../../types\";\r\n\r\nexport default ( state, action ) => {\r\n  switch ( action.type ) {\r\n    case FORMULARIO_PROYECTO:\r\n      return {\r\n        ...state,\r\n        formulario: true\r\n      }\r\n\r\n    case OBTENER_PROYECTOS:\r\n      // console.log( action.payload );\r\n      return {\r\n        ...state,\r\n        proyectos: action.payload\r\n      }\r\n\r\n    case AGREGAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: [ ...state.proyectos, action.payload ],\r\n        formulario: false,\r\n        errorFormulario: false\r\n      }\r\n\r\n    case VALIDAR_FORMULARIO:\r\n      return {\r\n        ...state,\r\n        errorFormulario: true\r\n      }\r\n\r\n    case PROYECTO_ACTUAL:\r\n      return {\r\n        ...state,\r\n        // Filtra si el id del proyecto pulsado es igual al de proyecto de la lista, devuelve el proyecto seleccionado\r\n        proyecto: state.proyectos.filter( proyecto => proyecto._id === action.payload )\r\n      }\r\n    case ELIMINAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: state.proyectos.filter( proyecto => proyecto._id !== action.payload ),\r\n        proyecto: null\r\n      }\r\n\r\n    case PROYECTO_ERROR:\r\n      return {\r\n        ...state,\r\n        mensaje: action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import axios from 'axios';\n\nconst clienteAxios = axios.create( {\n  baseURL: process.env.REACT_APP_BACKEND_URL\n} );\n\nexport default clienteAxios;","import { useReducer } from \"react\";\r\nimport ProyectoContext from \"./ProyectoContext\";\r\nimport ProyectoReducer from \"./ProyectoReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR\r\n} from \"../../types\";\r\n\r\nconst ProyectoState = props => {\r\n\r\n  const initialState = {\r\n    proyectos: [],\r\n    formulario: false,\r\n    errorFormulario: false,\r\n    proyecto: null,\r\n    mensaje: null\r\n  }\r\n\r\n  // Dispatch para ejecutar las acciones\r\n  const [ state, dispatch ] = useReducer( ProyectoReducer, initialState );\r\n\r\n  // Serie de funciones para el CRUD\r\n\r\n  const mostrarFormulario = () => {\r\n    dispatch( {\r\n      type: FORMULARIO_PROYECTO\r\n    } );\r\n  }\r\n\r\n  // Obtener los proyectos\r\n  const obtenerProyectos = async () => {\r\n\r\n    try {\r\n\r\n      const resultado = await clienteAxios.get( '/api/proyectos' );\r\n\r\n      dispatch( {\r\n        type: OBTENER_PROYECTOS,\r\n        // El payload es lo que toma la función como parámetro\r\n        payload: resultado.data.proyectos\r\n      } );\r\n\r\n    } catch ( error ) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n\r\n      dispatch( {\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta\r\n      } )\r\n    }\r\n\r\n  };\r\n\r\n  // Agregar nuevo proyecto\r\n  const agregarProyecto = async proyecto => {\r\n\r\n    try {\r\n\r\n      const resultado = await clienteAxios.post( '/api/proyectos', proyecto );\r\n      // console.log( resultado );\r\n\r\n      // Insertar el proyecto en el state\r\n      dispatch( {\r\n        type: AGREGAR_PROYECTO,\r\n        payload: resultado.data\r\n      } )\r\n\r\n    } catch ( error ) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n\r\n      dispatch( {\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta\r\n      } );\r\n    }\r\n\r\n  };\r\n\r\n  // Valida el formulario por errores\r\n  const mostrarError = () => {\r\n    dispatch( {\r\n      type: VALIDAR_FORMULARIO\r\n    } )\r\n  };\r\n\r\n  // Selecciona el proyecto al que el usuario dio click\r\n  const proyectoActual = proyectoId => {\r\n    dispatch( {\r\n      type: PROYECTO_ACTUAL,\r\n      payload: proyectoId\r\n    } )\r\n  };\r\n\r\n  // Elimina un proyecto\r\n  const eliminarProyecto = async proyectoId => {\r\n\r\n    try {\r\n\r\n      await clienteAxios.delete( `/api/proyectos/${ proyectoId }` );\r\n\r\n      dispatch( {\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoId\r\n      } );\r\n\r\n    } catch ( error ) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n\r\n      dispatch( {\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta\r\n      } )\r\n\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <ProyectoContext.Provider\r\n      value={ {\r\n        // ¿ States\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        errorFormulario: state.errorFormulario,\r\n        proyecto: state.proyecto,\r\n        mensaje: state.mensaje,\r\n        // ¿ Funciones\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto\r\n      } }\r\n    >\r\n      { props.children }\r\n    </ProyectoContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProyectoState;","import { createContext } from \"react\";\n\nconst TareaContext = createContext();\n\nexport default TareaContext;","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  TAREAS_PROYECTO,\n  AGREGAR_TAREA,\n  VALIDAR_TAREA,\n  ELIMINAR_TAREA,\n  // ESTADO_TAREA,\n  TAREA_ACTUAL,\n  ACTUALIZAR_TAREA,\n  LIMPIAR_TAREA\n\n} from \"../../types\";\n\n\nexport default ( state, action ) => {\n  switch ( action.type ) {\n\n    case TAREAS_PROYECTO:\n      return {\n        ...state,\n        // Esta linea se comenta porque la línea 35:TareaState ya realiza el filtrado, se sustituye con la línea de abajo\n        // tareasProyecto: state.tareasProyecto.filter( tarea => tarea.proyectoId === action.payload )\n        tareasProyecto: action.payload\n      }\n\n    case AGREGAR_TAREA:\n      return {\n        ...state,\n        tareasProyecto: [ action.payload, ...state.tareasProyecto ],\n        errorTarea: false\n      }\n\n    case VALIDAR_TAREA:\n      return {\n        ...state,\n        errorTarea: true\n      }\n\n    case ELIMINAR_TAREA:\n      return {\n        ...state,\n        tareasProyecto: state.tareasProyecto.filter( tarea => tarea._id !== action.payload )\n      }\n\n    case ACTUALIZAR_TAREA:\n      // case ESTADO_TAREA:\n      return {\n        ...state,\n        tareasProyecto: state.tareasProyecto.map( tarea => tarea._id === action.payload._id ? action.payload : tarea )\n      }\n\n    case TAREA_ACTUAL:\n      return {\n        ...state,\n        tareaSeleccionada: action.payload\n      }\n\n    case LIMPIAR_TAREA:\n      return {\n        ...state,\n        tareaSeleccionada: null\n      }\n\n    default:\n      return state;\n  }\n}","import { useReducer } from \"react\";\nimport TareaContext from \"./TareaContext\";\nimport TareaReducer from \"./TareaReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport {\n  TAREAS_PROYECTO,\n  AGREGAR_TAREA,\n  VALIDAR_TAREA,\n  ELIMINAR_TAREA,\n  // ESTADO_TAREA,\n  TAREA_ACTUAL,\n  ACTUALIZAR_TAREA,\n  LIMPIAR_TAREA\n\n} from \"../../types\";\n\nconst TareaState = props => {\n  const initialState = {\n    tareasProyecto: [],\n    errorTarea: false,\n    tareaSeleccionada: null\n  }\n\n  // Crear dispatch y state\n  const [ state, dispatch ] = useReducer( TareaReducer, initialState );\n\n  // Crear las funciones\n\n\n  // Obtener las tareas de un proyecto\n  const obtenerTareas = async proyecto => {\n\n    try {\n      // Cuando se usa params en el cliente, en el servidor debe usarse req.query en lugar de req.body\n      const resultado = await clienteAxios.get( '/api/tareas', { params: { proyecto } } );\n      // console.log( resultado.data.tareas );\n\n      dispatch( {\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      } );\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Agregar una tarea al proyecto seleccionado\n  const agregarTarea = async tarea => {\n\n    const resultado = await clienteAxios.post( '/api/tareas', tarea );\n    console.log( resultado );\n\n    try {\n\n      dispatch( {\n        type: AGREGAR_TAREA,\n        payload: tarea\n      } );\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Valida y muestra un error en caso de que sea necesario\n  const validarTarea = () => {\n    dispatch( {\n      type: VALIDAR_TAREA\n    } )\n  }\n\n  // Eliminar tarea por id\n  const eliminarTarea = async ( id, proyecto ) => {\n\n    try {\n\n      await clienteAxios.delete( `/api/tareas/${ id }`, { params: { proyecto } } );\n\n      dispatch( {\n        type: ELIMINAR_TAREA,\n        payload: id\n      } )\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n  // Cambia el estado de cada tarea\n  // const cambiarEstadoTarea = tarea => {\n  //   dispatch( {\n  //     type: ESTADO_TAREA,\n  //     payload: tarea\n  //   } )\n  // }\n\n  // Edita o modifica una tarea\n  const actualizarTarea = async tarea => {\n\n    try {\n\n      const resultado = await clienteAxios.put( `/api/tareas/${ tarea._id }`, tarea );\n      // console.log( resultado.data.tareaExiste );\n\n      dispatch( {\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tareaExiste\n      } )\n\n    } catch ( error ) {\n      console.log( error );\n    }\n\n  }\n\n\n  // Extrae la tarea para edición\n  const guardarTareaActual = tarea => {\n    dispatch( {\n      type: TAREA_ACTUAL,\n      payload: tarea\n    } )\n  }\n\n\n  // Elimina la tarea seleccionada\n  const limpiarTarea = () => {\n    dispatch( {\n      type: LIMPIAR_TAREA\n    } )\n  }\n\n  return (\n    <TareaContext.Provider\n      value={ {\n\n        // ¿ States\n        tareasProyecto: state.tareasProyecto,\n        errorTarea: state.errorTarea,\n        tareaSeleccionada: state.tareaSeleccionada,\n\n        // ¿ Funciones\n        obtenerTareas,\n        agregarTarea,\n        validarTarea,\n        eliminarTarea,\n        // cambiarEstadoTarea,\n        guardarTareaActual,\n        actualizarTarea,\n        limpiarTarea\n\n      } }\n    >\n      { props.children }\n    </TareaContext.Provider>\n  )\n\n}\n\nexport default TareaState;","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  MOSTRAR_ALERTA,\n  OCULTAR_ALERTA\n} from \"../../types\";\n\n\nexport default ( state, action ) => {\n  switch ( action.type ) {\n\n    case MOSTRAR_ALERTA:\n      return {\n        alerta: action.payload\n      }\n\n    case OCULTAR_ALERTA:\n      return {\n        alerta: null\n      }\n\n    default:\n      return state;\n  }\n}","import { createContext } from \"react\";\n\nconst AlertaContext = createContext();\n\nexport default AlertaContext;","import { useReducer } from \"react\";\nimport AlertaReducer from \"./AlertaReducer\";\nimport AlertaContext from \"./AlertaContext\";\nimport {\n  MOSTRAR_ALERTA,\n  OCULTAR_ALERTA\n} from \"../../types\";\n\nconst AlertaState = props => {\n\n  // State inicial\n  const initialState = {\n    alerta: null\n  }\n\n  const [ state, dispatch ] = useReducer( AlertaReducer, initialState );\n\n  // Funciones\n  const MostrarAlerta = ( msg, categoria ) => {\n    dispatch( {\n      type: MOSTRAR_ALERTA,\n      payload: {\n        msg,\n        categoria\n      }\n    } );\n\n    // Oculta la alerta después de x tiempo\n    setTimeout( () => {\n      dispatch( {\n        type: OCULTAR_ALERTA\n      } )\n    }, 5000 );\n\n  }\n\n  return (\n    <AlertaContext.Provider\n      value={ {\n        // ¿ States\n        alerta: state.alerta,\n        // ¿ Funciones\n        MostrarAlerta\n      } }\n    >\n      { props.children }\n    </AlertaContext.Provider>\n  )\n\n}\n\nexport default AlertaState;","import { createContext } from \"react\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  REGISTRO_EXITOSO,\n  REGISTRO_ERROR,\n  OBTENER_USUARIO,\n  LOGIN_EXITOSO,\n  LOGIN_ERROR,\n  CERRAR_SESION\n} from \"../../types\";\n\nexport default ( state, action ) => {\n  switch ( action.type ) {\n\n    case LOGIN_EXITOSO:\n    case REGISTRO_EXITOSO:\n      localStorage.setItem( 'token', action.payload.token );\n      return {\n        ...state,\n        autenticado: true,\n        mensaje: null,\n        cargando: false\n      }\n\n    // eslint-disable-next-line no-fallthrough\n    case OBTENER_USUARIO:\n      return {\n        ...state,\n        autenticado: true,\n        usuario: action.payload,\n        cargando: false\n      }\n\n    case CERRAR_SESION:\n    case LOGIN_ERROR:\n    case REGISTRO_ERROR:\n      localStorage.removeItem( 'token' );\n      return {\n        ...state,\n        token: null,\n        usuario: null,\n        autenticado: null,\n        mensaje: action.payload,\n        cargando: false\n      }\n\n\n    default:\n      return state;\n  }\n}","import clienteAxios from \"./axios\";\n\nconst TokenAuth = token => {\n  if ( token ) {\n\n    clienteAxios.defaults.headers.common[ 'x-auth-token' ] = token;\n\n  } else {\n\n    delete clienteAxios.defaults.headers.common[ 'x-auth-token' ];\n\n  }\n}\n\nexport default TokenAuth;","import { useReducer } from \"react\";\nimport AuthContext from \"./AuthContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport TokenAuth from \"../../config/tokenAuth\";\nimport {\n  REGISTRO_EXITOSO,\n  REGISTRO_ERROR,\n  OBTENER_USUARIO,\n  LOGIN_EXITOSO,\n  LOGIN_ERROR,\n  CERRAR_SESION\n} from \"../../types\";\n\nconst AuthState = props => {\n\n  // State inicial\n  const initialState = {\n    token: localStorage.getItem( 'token' ),\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: true\n  }\n\n  // Inicializacion del reducer\n  const [ state, dispatch ] = useReducer( AuthReducer, initialState );\n\n  // Funciones\n  const RegistrarUsuario = async datos => {\n\n    try {\n\n      const respuesta = await clienteAxios.post( '/api/usuarios', datos );\n      // console.log( respuesta.data );\n\n      dispatch( {\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      } );\n\n      // Obtener el usuario\n      UsuarioAutenticado();\n\n    } catch ( error ) {\n      // console.log( error.response.data.msg );\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      }\n\n      dispatch( {\n        type: REGISTRO_ERROR,\n        payload: alerta\n      } );\n    }\n  };\n\n  // Cuando el usuario inicia sesión\n  const IniciarSesion = async datos => {\n\n    try {\n\n      const respuesta = await clienteAxios.post( '/api/auth', datos );\n      // console.log( respuesta );\n      dispatch( {\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data\n      } );\n\n      // Obtener el usuario\n      UsuarioAutenticado();\n\n    } catch ( error ) {\n      console.log( error.response.data.msg );\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      }\n\n      dispatch( {\n        type: LOGIN_ERROR,\n        payload: alerta\n      } );\n    }\n  };\n\n  // Retorna el usuario autenticado\n  const UsuarioAutenticado = async () => {\n    const token = localStorage.getItem( 'token' );\n    if ( token ) {\n      // Función para enviar el token por headers\n      TokenAuth( token );\n    }\n\n    try {\n\n      const respuesta = await clienteAxios.get( '/api/auth' );\n      // console.log(  );\n\n      dispatch( {\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario\n      } )\n\n    } catch ( error ) {\n      console.log( error.response );\n      dispatch( {\n        type: LOGIN_ERROR\n      } )\n    }\n  };\n\n  // Cierra la sesión del usuario\n  const CerrarSesion = () => {\n    dispatch( {\n      type: CERRAR_SESION\n    } )\n  }\n\n  return (\n    <AuthContext.Provider\n      value={ {\n        // ¿ States\n        token: state.token,\n        autenticado: state.autenticado,\n        usuario: state.usuario,\n        mensaje: state.mensaje,\n        cargando: state.cargando,\n        // ¿ Funciones\n        RegistrarUsuario,\n        IniciarSesion,\n        UsuarioAutenticado,\n        CerrarSesion\n      } }\n    >\n      { props.children }\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthState;","import { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/AlertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/AuthContext\";\r\n\r\n\r\nconst Login = ( props ) => {\r\n\r\n  // Extraer los valores de AlertaContext\r\n  const alertaContext = useContext( AlertaContext );\r\n  const { alerta, MostrarAlerta } = alertaContext;\r\n\r\n  // Extraer los valores de AuthContext\r\n  const authContext = useContext( AuthContext );\r\n  const { mensaje, autenticado, IniciarSesion } = authContext;\r\n\r\n  // En caso de que el password o el usuario no exista\r\n  useEffect( () => {\r\n\r\n    if ( autenticado ) {\r\n      props.history.push( '/proyectos' );\r\n    }\r\n\r\n    if ( mensaje ) {\r\n      MostrarAlerta( mensaje.msg, 'alerta-error' );\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line\r\n  }, [ mensaje, autenticado, props.history ] );\r\n\r\n  // State para iniciar sesión\r\n  const [ usuario, setUsuario ] = useState( {\r\n    email: '',\r\n    password: ''\r\n  } );\r\n\r\n  // Extraer de usuario\r\n  const { email, password } = usuario;\r\n\r\n  const onChange = e => {\r\n    setUsuario( {\r\n      ...usuario,\r\n      [ e.target.name ]: e.target.value\r\n    }\r\n    )\r\n  }\r\n\r\n  // Cuando el usuario quiere iniciar sesión\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar que no haya campos vacíos\r\n    if ( email.trim() === '' ||\r\n      password.trim() === '' ) {\r\n      MostrarAlerta( 'Todos los campos son obligatorios', 'alerta-error' );\r\n      return;\r\n    }\r\n\r\n    // Pasarlo al Action de Express\r\n    IniciarSesion( { email, password } );\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {\r\n        alerta ?\r\n          <div className={ `alerta ${ alerta.categoria }` }>\r\n            { alerta.msg }\r\n          </div>\r\n          :\r\n          null\r\n      }\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Iniciar Sesión</h1>\r\n\r\n        <form\r\n          onSubmit={ onSubmit }\r\n        >\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Tu Email\"\r\n              value={ email }\r\n              onChange={ onChange }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Tu Password\"\r\n              value={ password }\r\n              onChange={ onChange }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Iniciar Sesión\"\r\n              className=\"btn btn-primario btn-block\"\r\n            />\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <Link to={ '/nueva-cuenta' } className=\"enlace-cuenta\">\r\n          Crear Nueva Cuenta\r\n        </Link>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/AlertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/AuthContext\";\r\n\r\nconst NuevaCuenta = ( props ) => {\r\n\r\n  // Extraer los valores de AlertaContext\r\n  const alertaContext = useContext( AlertaContext );\r\n  const { alerta, MostrarAlerta } = alertaContext;\r\n\r\n  // Extraer los valores de AuthContext\r\n  const authContext = useContext( AuthContext );\r\n  const { mensaje, autenticado, RegistrarUsuario } = authContext;\r\n\r\n  // En caso de que le usuario se haya autenticado o registrado o sea un registro duplicado\r\n  useEffect( () => {\r\n\r\n    if ( autenticado ) {\r\n      props.history.push( '/proyectos' );\r\n    }\r\n\r\n    if ( mensaje ) {\r\n      MostrarAlerta( mensaje.msg, 'alerta-error' );\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line\r\n  }, [ mensaje, autenticado, props.history ] );\r\n\r\n  // State para iniciar sesión\r\n  const [ usuario, setUsuario ] = useState( {\r\n    nombre: '',\r\n    email: '',\r\n    password: '',\r\n    confirmar: ''\r\n  } );\r\n\r\n  // Extraer de usuario\r\n  const { nombre, email, password, confirmar } = usuario;\r\n\r\n  const onChange = e => {\r\n    setUsuario( {\r\n      ...usuario,\r\n      [ e.target.name ]: e.target.value\r\n    }\r\n    )\r\n  }\r\n\r\n  // Cuando el usuario quiere iniciar sesión\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar que no haya campos vacíos\r\n    if ( nombre.trim() === '' ||\r\n      email.trim() === '' ||\r\n      password.trim() === '' ||\r\n      confirmar.trim() === '' ) {\r\n      MostrarAlerta( 'Todos los campos son obligatorios', 'alerta-error' );\r\n      return;\r\n    }\r\n\r\n    // Password mínimo de 6 caracteres\r\n    if ( password.length < 6 ) {\r\n      MostrarAlerta( 'El password debe de ser de al menos 6 caracteres', 'alerta-error' );\r\n      return;\r\n    }\r\n\r\n    // Revisar que los 2 passwords sean iguales\r\n    if ( password !== confirmar ) {\r\n      MostrarAlerta( 'Los passwords no son iguales', 'alerta-error' );\r\n      return;\r\n    }\r\n\r\n    // Pasarlo al Action de Express\r\n    RegistrarUsuario( {\r\n      nombre, email, password\r\n    } );\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {\r\n        alerta ?\r\n          <div className={ `alerta ${ alerta.categoria }` }>\r\n            { alerta.msg }\r\n          </div>\r\n          :\r\n          null\r\n      }\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Crear Nueva Cuenta</h1>\r\n\r\n        <form\r\n          onSubmit={ onSubmit }\r\n        >\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"nombre\">Nombre</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nombre\"\r\n              name=\"nombre\"\r\n              placeholder=\"Tu Nombre\"\r\n              value={ nombre }\r\n              onChange={ onChange }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Tu Email\"\r\n              value={ email }\r\n              onChange={ onChange }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Tu Password (Min. 6 caracteres)\"\r\n              value={ password }\r\n              onChange={ onChange }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"confirmar\">Repetir Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmar\"\r\n              name=\"confirmar\"\r\n              placeholder=\"Repite Tu Password\"\r\n              value={ confirmar }\r\n              onChange={ onChange }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Registrarme\"\r\n              className=\"btn btn-primario btn-block\"\r\n            />\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <Link to={ '/' } className=\"enlace-cuenta\">\r\n          Volver a Iniciar Sesión\r\n        </Link>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NuevaCuenta;","import { Fragment, useState, useContext } from \"react\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n  // Obtener el state del formulario\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const {\r\n    // ¿ States\r\n    formulario,\r\n    errorFormulario,\r\n    // ¿ Funciones\r\n    mostrarFormulario,\r\n    agregarProyecto,\r\n    mostrarError\r\n  } = proyectosContext;\r\n\r\n  // State para proyecto\r\n  const [ proyecto, setProyecto ] = useState( {\r\n    nombre: ''\r\n  } );\r\n\r\n\r\n  // Lee los contenidos del input\r\n  const onChangeProyecto = e => {\r\n    setProyecto( {\r\n      ...proyecto,\r\n      [ e.target.name ]: e.target.value\r\n    } );\r\n  }\r\n\r\n  // Extraer nombre de proyecto\r\n  const { nombre } = proyecto;\r\n\r\n  // Cuando el usuario envía un proyecto\r\n  const onSubmitProyecto = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar proyecto\r\n    if ( nombre === '' ) {\r\n      mostrarError();\r\n      return;\r\n    }\r\n\r\n\r\n    // Agregar al state\r\n    agregarProyecto( proyecto );\r\n\r\n\r\n    // Reiniciar el form\r\n    setProyecto( {\r\n      nombre: ''\r\n    } );\r\n\r\n  }\r\n\r\n  // Mostrar el formulario\r\n  const onClickFormulario = () => {\r\n    mostrarFormulario();\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={ onClickFormulario }\r\n      >\r\n        Nuevo Proyecto\r\n      </button>\r\n\r\n      {/* Si formulario existe que se muestre, de lo contrario se oculta */ }\r\n      {\r\n        formulario ?\r\n          ( <form\r\n            className=\"formulario-nuevo-proyecto\"\r\n            onSubmit={ onSubmitProyecto }\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              id=\"\"\r\n              className=\"input-text\"\r\n              placeholder=\"Nombre del Proyecto\"\r\n              onChange={ onChangeProyecto }\r\n              value={ nombre }\r\n\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Agregar Proyecto\"\r\n              className=\"btn btn-primario btn-block\"\r\n            />\r\n\r\n          </form> )\r\n          :\r\n          null\r\n      }\r\n\r\n      {/* Revisa si el error del formulario es verdadero o falso */ }\r\n      {\r\n        errorFormulario ?\r\n          <p className=\"mensaje error\">\r\n            El Nombre del Proyecto es Obligatorio\r\n          </p>\r\n          :\r\n          null\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NuevoProyecto;","import { useContext } from \"react\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\nimport TareaContext from \"../../context/tareas/TareaContext\";\r\n\r\nconst Proyecto = ( { proyecto } ) => {\r\n\r\n  // Obtener el state de proyectos\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const { proyectoActual } = proyectosContext;\r\n\r\n  // Obtener la función del context de tarea\r\n  const tareasContext = useContext( TareaContext );\r\n  const { obtenerTareas } = tareasContext;\r\n\r\n  // Función para agregar el proyecto actual\r\n  const seleccionarProyecto = id => {\r\n    proyectoActual( id ); // Fijar un proyecto actual\r\n    obtenerTareas( id ); // Filtrar las tareas cuando se de click\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-blank\"\r\n        onClick={ () => seleccionarProyecto( proyecto._id ) }\r\n      >\r\n        { proyecto.nombre }\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Proyecto;","import Proyecto from \"./Proyecto\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport AlertaContext from \"../../context/alertas/AlertaContext\";\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n  // Extraer proyectos de state inicial\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n\r\n  const alertaContext = useContext( AlertaContext );\r\n  const { alerta, MostrarAlerta } = alertaContext;\r\n\r\n  // Obtener proyectos cuando carga el componente\r\n  useEffect( () => {\r\n\r\n    // Si hay un error\r\n    if ( mensaje ) {\r\n      MostrarAlerta( mensaje.msg, mensaje.categoria );\r\n    }\r\n\r\n    obtenerProyectos();\r\n    // eslint-disable-next-line\r\n  }, [ mensaje ] );\r\n\r\n  // Revisar si proyectos tiene contenido\r\n  if ( proyectos.length === 0 ) {\r\n    return <p>No hay proyectos, comienza creando uno nuevo</p>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"listado-proyectos\">\r\n\r\n      { alerta ?\r\n        (\r\n          <div\r\n            className={ `alerta ${ alerta.categoria }` }\r\n          >\r\n            { alerta.msg }\r\n          </div>\r\n        )\r\n        :\r\n        null\r\n      }\r\n\r\n      <TransitionGroup>\r\n        { proyectos.map( proyecto => (\r\n          <CSSTransition\r\n            key={ proyecto._id }\r\n            timeout={ 250 }\r\n            classNames=\"proyecto\"\r\n          >\r\n            <Proyecto\r\n              proyecto={ proyecto }\r\n            />\r\n          </CSSTransition>\r\n        ) ) }\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ListadoProyectos;","import NuevoProyecto from \"../proyectos/NuevoProyecto\";\r\nimport ListadoProyectos from \"../proyectos/ListadoProyectos\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside>\r\n      <h1>MERN <span>Tasks</span></h1>\r\n\r\n      <NuevoProyecto />\r\n\r\n      <div className=\"proyectos\">\r\n        <h2>Tus Proyectos</h2>\r\n\r\n        <ListadoProyectos />\r\n      </div>\r\n\r\n\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import { useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../context/autenticacion/AuthContext\";\r\n\r\nconst Barra = () => {\r\n\r\n  // Extraer la información de autenticación\r\n  const authContext = useContext( AuthContext );\r\n  const { usuario, UsuarioAutenticado, CerrarSesion } = authContext;\r\n\r\n  useEffect( () => {\r\n    UsuarioAutenticado();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [] );\r\n\r\n  return (\r\n    <header className=\"app-header\">\r\n      {\r\n        usuario ?\r\n          <p className=\"nombre-usuario\">\r\n            Hola <span>{ usuario.nombre }</span>\r\n          </p>\r\n          :\r\n          null\r\n      }\r\n      <nav className=\"nav-principal\">\r\n        <button\r\n          className=\"btn btn-blank btn-primario cerrar-sesion\"\r\n          onClick={ () => CerrarSesion() }\r\n        >\r\n          Cerrar Sesión\r\n        </button>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Barra;","import { useContext, useState, useEffect } from \"react\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\nimport TareaContext from \"../../context/tareas/TareaContext\";\r\n\r\nconst FormTarea = () => {\r\n\r\n  // Extraer si un proyecto está activo\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const { proyecto } = proyectosContext;\r\n\r\n  // Obtener la funcion del context de tarea\r\n  const tareasContext = useContext( TareaContext );\r\n  const { tareaSeleccionada, errorTarea, obtenerTareas, agregarTarea, validarTarea, actualizarTarea, limpiarTarea } = tareasContext;\r\n\r\n  // Effect que detecta si hay una tarea seleccionada\r\n  useEffect( () => {\r\n\r\n    if ( tareaSeleccionada !== null ) {\r\n      setTarea( tareaSeleccionada );\r\n    } else {\r\n      setTarea( {\r\n        nombre: ''\r\n      } )\r\n    }\r\n\r\n  }, [ tareaSeleccionada ] )\r\n\r\n  // State del formulario\r\n  const [ tarea, setTarea ] = useState( {\r\n    nombre: ''\r\n  } )\r\n\r\n  // Extraer el nombre del proyecto\r\n  const { nombre } = tarea;\r\n\r\n  // Si no hay proyecto seleccionado\r\n  if ( !proyecto ) {\r\n    return null\r\n  }\r\n\r\n  // Array destructuring para extraer el proyecto actual\r\n  const [ proyectoActual ] = proyecto;\r\n\r\n  // Leer los valores del formulario\r\n  const handleChange = e => {\r\n    setTarea( {\r\n      ...tarea,\r\n      [ e.target.name ]: e.target.value\r\n    } )\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    if ( nombre.trim() === '' ) {\r\n      validarTarea();\r\n      return;\r\n    }\r\n\r\n    // Si es edición o si es nueva tarea\r\n    if ( tareaSeleccionada === null ) {\r\n      // Agregar la tarea nueva al state de tareas, se iguala el id y se pasan las tareas en false\r\n      tarea.proyecto = proyectoActual._id;\r\n      agregarTarea( tarea );\r\n    } else {\r\n      // Actualizar tarea existente\r\n      actualizarTarea( tarea );\r\n\r\n      // Elimina tareaSeleccionara del state\r\n      limpiarTarea();\r\n\r\n    }\r\n\r\n    // Obtener y filtrar las tareas del proyecto actual\r\n    obtenerTareas( proyectoActual.id );\r\n\r\n    // Reiniciar el Form\r\n    setTarea( {\r\n      nombre: ''\r\n    } )\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"formulario\">\r\n      <form\r\n        onSubmit={ onSubmit }\r\n      >\r\n\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            id=\"\"\r\n            className=\"input-text\"\r\n            placeholder=\"Nombre Tarea...\"\r\n            value={ nombre }\r\n            onChange={ handleChange }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"submit\"\r\n            value={ tareaSeleccionada ? 'Editar Tarea' : 'Agregar Tarea' }\r\n            className=\"btn btn-primario btn-submit btn-block\"\r\n          />\r\n        </div>\r\n\r\n      </form>\r\n\r\n      { errorTarea ?\r\n        <p className=\"mensaje error\">\r\n          El nombre de la tarea es obligatorio\r\n        </p>\r\n        :\r\n        null\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormTarea;","import { useContext } from \"react\";\r\nimport TareaContext from \"../../context/tareas/TareaContext\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\n\r\nconst Tarea = ( { tarea } ) => {\r\n\r\n  // Extraer si un proyecto está activo\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const { proyecto } = proyectosContext;\r\n\r\n  // Obtener la función del context de tarea\r\n  const tareasContext = useContext( TareaContext );\r\n  const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\r\n\r\n  // Extraer el proyecto\r\n  const [ proyectoActual ] = proyecto;\r\n\r\n  // Función que se ejecuta cuando el usuario presiona el botón de eliminar tarea\r\n  const tareaEliminar = id => {\r\n    eliminarTarea( id, proyectoActual._id );\r\n    obtenerTareas( proyectoActual.id );\r\n\r\n  }\r\n\r\n  // Función que modifica el estado de las tareas\r\n  const cambiarEstado = tarea => {\r\n    if ( tarea.estado ) {\r\n      tarea.estado = false;\r\n    } else {\r\n      tarea.estado = true;\r\n    }\r\n\r\n    actualizarTarea( tarea );\r\n\r\n  }\r\n\r\n  // Agrega una tarea actual cuando el usuario desea editarla\r\n  const seleccionarTarea = tarea => {\r\n    guardarTareaActual( tarea );\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <li className=\"tarea sombra\">\r\n\r\n      <p>{ tarea.nombre }</p>\r\n\r\n      <div className=\"estado\">\r\n        { tarea.estado ?\r\n          (\r\n            <button\r\n              type=\"button\"\r\n              className=\"completo\"\r\n              onClick={ () => cambiarEstado( tarea ) }\r\n            >\r\n              Completo\r\n            </button>\r\n          )\r\n          :\r\n          <button\r\n            type=\"button\"\r\n            className=\"incompleto\"\r\n            onClick={ () => cambiarEstado( tarea ) }\r\n          >\r\n            Incompleto\r\n          </button>\r\n        }\r\n      </div>\r\n\r\n      <div className=\"acciones\">\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primario\"\r\n          onClick={ () => seleccionarTarea( tarea ) }\r\n        >\r\n          Editar\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secundario\"\r\n          onClick={ () => tareaEliminar( tarea._id ) }\r\n        >\r\n          Eliminar\r\n        </button>\r\n\r\n\r\n      </div>\r\n\r\n    </li>\r\n\r\n  );\r\n}\r\n\r\nexport default Tarea;","import { Fragment, useContext } from \"react\";\r\nimport Tarea from \"./Tarea\";\r\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\r\nimport TareaContext from \"../../context/tareas/TareaContext\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nconst ListadoTareas = () => {\r\n\r\n  // Extraer proyectos de state inicial\r\n  const proyectosContext = useContext( ProyectoContext );\r\n  const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n  // Obtener las tareas del proyecto\r\n  const tareasContext = useContext( TareaContext );\r\n  const { tareasProyecto } = tareasContext;\r\n\r\n  // Si no hay proyecto seleccionado\r\n  if ( !proyecto ) {\r\n    return <h2>Selecciona un proyecto</h2>\r\n  }\r\n\r\n  // Array destructuring para extraer el proyecto actual\r\n  const [ proyectoActual ] = proyecto;\r\n\r\n  // Eliminar proyecto\r\n  const onClickEliminar = () => {\r\n    eliminarProyecto( proyectoActual._id );\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <h2>Proyecto: { proyectoActual.nombre }</h2>\r\n\r\n      <ul className=\"listado-tareas\">\r\n\r\n        { tareasProyecto.length === 0 ?\r\n\r\n          <li className=\"tarea\">\r\n            <p>No hay tareas</p>\r\n          </li>\r\n\r\n          :\r\n          <TransitionGroup>\r\n            { tareasProyecto.map( tarea => (\r\n              <CSSTransition\r\n                key={ tarea.id }\r\n                timeout={ 250 }\r\n                classNames=\"tarea\"\r\n              >\r\n                <Tarea\r\n                  tarea={ tarea }\r\n                />\r\n              </CSSTransition>\r\n            ) ) }\r\n          </TransitionGroup>\r\n\r\n        }\r\n      </ul>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-eliminar\"\r\n        onClick={ onClickEliminar }\r\n      >\r\n        Eliminar Proyecto &times;\r\n      </button>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ListadoTareas;","import { useContext, useEffect } from \"react\";\r\nimport Sidebar from \"../layout/Sidebar\";\r\nimport Barra from \"../layout/Barra\";\r\nimport FormTarea from \"../tareas/FormTarea\";\r\nimport ListadoTareas from \"../tareas/ListadoTareas\";\r\nimport AuthContext from \"../../context/autenticacion/AuthContext\";\r\n\r\nconst Proyectos = () => {\r\n\r\n  // Extraer la información de autenticación\r\n  const authContext = useContext( AuthContext );\r\n  const { UsuarioAutenticado } = authContext;\r\n\r\n  useEffect( () => {\r\n    UsuarioAutenticado();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [] );\r\n\r\n  return (\r\n    <div className=\"contenedor-app\">\r\n\r\n      <Sidebar />\r\n\r\n      <div className=\"seccion-principal\">\r\n\r\n        <Barra />\r\n\r\n        <main>\r\n\r\n          <FormTarea />\r\n\r\n          <div className=\"contenedor-tareas\">\r\n\r\n            <ListadoTareas />\r\n\r\n          </div>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Proyectos;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/autenticacion/AuthContext\";\n\n//  Higher Order Component\n// ° Este es un componente que contiene otro componente dentro de él, recibe un componente y los props del mismo\n// ° Su función es tomar autenticado para saber si el usuario está autenticado o no\n// ! Si no está autenticado, se le redirecciona a la página principal\n// ¿ Si está autenticado, se le envía al componente que lo está mandando a llamar con una copia de los props\nconst RutaPrivada = ( { component: Component, ...props } ) => {\n\n  const authContext = useContext( AuthContext );\n  const { autenticado, cargando, UsuarioAutenticado } = authContext;\n\n  useEffect( () => {\n    UsuarioAutenticado();\n\n  }, [] )\n\n  return (\n    <Route\n      { ...props }\n      render={ props => !autenticado && !cargando ?\n        (\n          <Redirect to=\"/\" />\n        )\n        :\n        (\n          <Component { ...props } />\n        ) }\n    />\n  );\n}\n\nexport default RutaPrivada;","// Se usa react-router-dom para el manejo de múltiples páginas principales\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// ¬ Context\nimport ProyectoState from './context/proyectos/ProyectoState';\nimport TareaState from './context/tareas/TareaState';\nimport AlertaState from './context/alertas/AlertaState';\nimport AuthState from './context/autenticacion/AuthState';\n\n// ¬ Componentes\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\n// ¬ Otros\nimport TokenAuth from './config/tokenAuth';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem( 'token' );\nif ( token ) {\n  TokenAuth( token );\n}\n\n\nfunction App() {\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={ Login } />\n                <Route exact path=\"/nueva-cuenta\" component={ NuevaCuenta } />\n                {/* Aquí se le hace el llamado al Higher Order Component \"Ruta Privada\" */ }\n                {/* El HOC toma dentro de él el componente \"Proyectos\" y evalúa si el usuario está autenticado o no */ }\n                <RutaPrivada exact path=\"/proyectos\" component={ Proyectos } />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);"],"sourceRoot":""}